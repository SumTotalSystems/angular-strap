{"version":3,"sources":["modules/collapse.js"],"names":["angular","module","provider","controller","this","animation","self","forEach","startCollapsed","isDefined","allowMultiple","$scope","$element","$attrs","activeIndexes","$targets","$active","i","length","index","value","indexOf","splice","deactivateItem","activateItem","$options","attr","undefined","$toggles","push","$collapse","defaults","key","$viewChangeListeners","$registerToggle","element","$registerTarget","$unregisterToggle","fn","fixActiveItemIndexes","$setActive","disallowToggle","isActive","$activeIndexes","$get","require","link","postLink","ngModelCtrl","directive","$window","$animate","$setViewValue","$formatters","attrs","modelValue","isArray","bsCollapseCtrl","$on","actionEventHandler","controllers","disabled","bsCollapseToggle","scope","$apply","which","e","preventDefault","on","bind","render","active","action","activeClass","$unregisterTarget","addClass"],"mappings":"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","file":"modules/collapse.min.js","sourcesContent":["'use strict';\r\n\r\nangular.module('mgcrea.ngStrap.collapse', [])\r\n\r\n  .provider('$collapse', function () {\r\n\r\n    var defaults = this.defaults = {\r\n      animation: 'am-collapse',\r\n      disallowToggle: false,\r\n      activeClass: 'in',\r\n      startCollapsed: false,\r\n      allowMultiple: false\r\n    };\r\n\r\n    var controller = this.controller = function ($scope, $element, $attrs) {\r\n      var self = this;\r\n\r\n      // Attributes options\r\n      self.$options = angular.copy(defaults);\r\n      angular.forEach(['animation', 'disallowToggle', 'activeClass', 'startCollapsed', 'allowMultiple'], function (key) {\r\n        if (angular.isDefined($attrs[key])) self.$options[key] = $attrs[key];\r\n      });\r\n\r\n      // use string regex match boolean attr falsy values, leave truthy values be\r\n      var falseValueRegExp = /^(false|0|)$/i;\r\n      angular.forEach(['disallowToggle', 'startCollapsed', 'allowMultiple'], function (key) {\r\n        if (angular.isDefined($attrs[key]) && falseValueRegExp.test($attrs[key])) {\r\n          self.$options[key] = false;\r\n        }\r\n      });\r\n\r\n      self.$toggles = [];\r\n      self.$targets = [];\r\n\r\n      self.$viewChangeListeners = [];\r\n\r\n      self.$registerToggle = function (element) {\r\n        self.$toggles.push(element);\r\n        element.attr('aria-expanded', 'false');\r\n      };\r\n      self.$registerTarget = function (element) {\r\n        self.$targets.push(element);\r\n\r\n        var i = 0;\r\n        if (self.$targets) {\r\n          for (i = 0; i < self.$targets.length; i++) {\r\n            self.$targets[i].attr('aria-hidden', 'true');\r\n          }\r\n          for (i = 0; i < self.$targets.$active.length; i++) {\r\n            if (self.$targets[self.$targets.$active[i]]) {\r\n              self.$targets[self.$targets.$active[i]].attr('aria-hidden', 'false');\r\n            }\r\n            if (self.$toggles[self.$targets.$active[i]]) {\r\n              self.$toggles[self.$targets.$active[i]].attr('aria-expanded', 'true');\r\n            }\r\n          }\r\n        }\r\n      };\r\n\r\n      self.$unregisterToggle = function (element) {\r\n        var index = self.$toggles.indexOf(element);\r\n        // remove toggle from $toggles array\r\n        self.$toggles.splice(index, 1);\r\n      };\r\n      self.$unregisterTarget = function (element) {\r\n        var index = self.$targets.indexOf(element);\r\n\r\n        // remove element from $targets array\r\n        self.$targets.splice(index, 1);\r\n\r\n        if (self.$options.allowMultiple) {\r\n          // remove target index from $active array values\r\n          deactivateItem(element);\r\n        }\r\n\r\n        // fix active item indexes\r\n        fixActiveItemIndexes(index);\r\n\r\n        self.$viewChangeListeners.forEach(function (fn) {\r\n          fn();\r\n        });\r\n      };\r\n\r\n      // use array to store all the currently open panels\r\n      self.$targets.$active = !self.$options.startCollapsed ? [0] : [];\r\n      self.$setActive = $scope.$setActive = function (value) {\r\n        if (angular.isArray(value)) {\r\n          self.$targets.$active = value;\r\n        } else if (!self.$options.disallowToggle && isActive(value)) {\r\n          deactivateItem(value);\r\n        } else {\r\n          activateItem(value);\r\n        }\r\n\r\n        self.$viewChangeListeners.forEach(function (fn) {\r\n          fn();\r\n        });\r\n      };\r\n\r\n      self.$activeIndexes = function () {\r\n        if (self.$options.allowMultiple) {\r\n          return self.$targets.$active;\r\n        }\r\n        return self.$targets.$active.length === 1 ? self.$targets.$active[0] : -1;\r\n      };\r\n\r\n      function fixActiveItemIndexes (index) {\r\n        // item with index was removed, so we\r\n        // need to adjust other items index values\r\n        var activeIndexes = self.$targets.$active;\r\n        for (var i = 0; i < activeIndexes.length; i++) {\r\n          if (index < activeIndexes[i]) {\r\n            activeIndexes[i] = activeIndexes[i] - 1;\r\n          }\r\n\r\n          // the last item is active, so we need to\r\n          // adjust its index\r\n          if (activeIndexes[i] === self.$targets.length) {\r\n            activeIndexes[i] = self.$targets.length - 1;\r\n          }\r\n        }\r\n      }\r\n\r\n      function isActive (value) {\r\n        var activeItems = self.$targets.$active;\r\n        return activeItems.indexOf(value) !== -1;\r\n      }\r\n\r\n      function deactivateItem (value) {\r\n        var index = self.$targets.$active.indexOf(value);\r\n        if (index !== -1) {\r\n          self.$targets[self.$targets.$active[index]].attr('aria-hidden', 'true');\r\n          self.$toggles[self.$targets.$active[index]].attr('aria-expanded', 'false');\r\n          self.$targets.$active.splice(index, 1);\r\n        }\r\n      }\r\n\r\n      function activateItem (value) {\r\n        if (!self.$options.allowMultiple) {\r\n          // remove current selected item\r\n          if (self.$targets[self.$targets.$active[0]] !== undefined) {\r\n            self.$targets[self.$targets.$active[0]].attr('aria-hidden', 'true');\r\n          }\r\n          if (self.$toggles[self.$targets.$active[0]]) {\r\n            self.$toggles[self.$targets.$active[0]].attr('aria-expanded', 'false');\r\n          }\r\n          self.$targets.$active.splice(0, 1);\r\n        }\r\n\r\n        if (self.$targets.$active.indexOf(value) === -1) {\r\n          self.$targets.$active.push(value);\r\n\r\n          if (self.$targets[self.$targets.$active[self.$targets.$active.length - 1]] !== undefined) {\r\n            self.$targets[self.$targets.$active[self.$targets.$active.length - 1]].attr('aria-hidden', 'false');\r\n          }\r\n          if (self.$toggles[self.$targets.$active[self.$targets.$active.length - 1]] !== undefined) {\r\n            self.$toggles[self.$targets.$active[self.$targets.$active.length - 1]].attr('aria-expanded', 'true');\r\n          }\r\n        }\r\n      }\r\n\r\n    };\r\n\r\n    this.$get = function () {\r\n      var $collapse = {};\r\n      $collapse.defaults = defaults;\r\n      $collapse.controller = controller;\r\n      return $collapse;\r\n    };\r\n\r\n  })\r\n\r\n  .directive('bsCollapse', function ($window, $animate, $collapse) {\r\n\r\n    return {\r\n      require: ['?ngModel', 'bsCollapse'],\r\n      controller: ['$scope', '$element', '$attrs', $collapse.controller],\r\n      link: function postLink (scope, element, attrs, controllers) {\r\n\r\n        var ngModelCtrl = controllers[0];\r\n        var bsCollapseCtrl = controllers[1];\r\n\r\n        if (ngModelCtrl) {\r\n\r\n          // Update the modelValue following\r\n          bsCollapseCtrl.$viewChangeListeners.push(function () {\r\n            ngModelCtrl.$setViewValue(bsCollapseCtrl.$activeIndexes());\r\n          });\r\n\r\n          // modelValue -> $formatters -> viewValue\r\n          ngModelCtrl.$formatters.push(function (modelValue) {\r\n            // console.warn('$formatter(\"%s\"): modelValue=%o (%o)', element.attr('ng-model'), modelValue, typeof modelValue);\r\n            if (angular.isArray(modelValue)) {\r\n              // model value is an array, so just replace\r\n              // the active items directly\r\n              bsCollapseCtrl.$setActive(modelValue);\r\n            } else {\r\n              var activeIndexes = bsCollapseCtrl.$activeIndexes();\r\n\r\n              if (angular.isArray(activeIndexes)) {\r\n                // we have an array of selected indexes\r\n                if (activeIndexes.indexOf(modelValue * 1) === -1) {\r\n                  // item with modelValue index is not active\r\n                  bsCollapseCtrl.$setActive(modelValue * 1);\r\n                }\r\n              } else if (activeIndexes !== modelValue * 1) {\r\n                bsCollapseCtrl.$setActive(modelValue * 1);\r\n              }\r\n            }\r\n            return modelValue;\r\n          });\r\n\r\n        }\r\n\r\n      }\r\n    };\r\n\r\n  })\r\n\r\n  .directive('bsCollapseToggle', function () {\r\n\r\n    return {\r\n      require: ['^?ngModel', '^bsCollapse'],\r\n      link: function postLink (scope, element, attrs, controllers) {\r\n\r\n        // var ngModelCtrl = controllers[0];\r\n        var bsCollapseCtrl = controllers[1];\r\n\r\n        // Add base attr\r\n        element.attr('data-toggle', 'collapse');\r\n\r\n        // Push pane to parent bsCollapse controller\r\n        bsCollapseCtrl.$registerToggle(element);\r\n\r\n        // remove toggle from collapse controller when toggle is destroyed\r\n        scope.$on('$destroy', function () {\r\n          bsCollapseCtrl.$unregisterToggle(element);\r\n        });\r\n\r\n        var actionEventHandler = function () {\r\n          if (!attrs.disabled) {\r\n            var index = attrs.bsCollapseToggle && attrs.bsCollapseToggle !== 'bs-collapse-toggle' ? attrs.bsCollapseToggle : bsCollapseCtrl.$toggles.indexOf(element);\r\n            bsCollapseCtrl.$setActive(index * 1);\r\n            scope.$apply();\r\n          }\r\n        };\r\n\r\n        element.on('click', actionEventHandler);\r\n        element.bind('keydown keypress', function (e) {\r\n          if (e.which === 13 || e.which === 32) {\r\n            actionEventHandler();\r\n            e.preventDefault();\r\n          } else if (e.which !== 16 && e.which !== 9) {\r\n            e.preventDefault();\r\n          }\r\n        });\r\n      }\r\n    };\r\n\r\n  })\r\n\r\n  .directive('bsCollapseTarget', function ($animate) {\r\n\r\n    return {\r\n      require: ['^?ngModel', '^bsCollapse'],\r\n      // scope: true,\r\n      link: function postLink (scope, element, attrs, controllers) {\r\n\r\n        // var ngModelCtrl = controllers[0];\r\n        var bsCollapseCtrl = controllers[1];\r\n\r\n        // Add base class\r\n        element.addClass('collapse');\r\n\r\n        // Add animation class\r\n        if (bsCollapseCtrl.$options.animation) {\r\n          element.addClass(bsCollapseCtrl.$options.animation);\r\n        }\r\n\r\n        // Push pane to parent bsCollapse controller\r\n        bsCollapseCtrl.$registerTarget(element);\r\n\r\n        // remove pane target from collapse controller when target is destroyed\r\n        scope.$on('$destroy', function () {\r\n          bsCollapseCtrl.$unregisterTarget(element);\r\n        });\r\n\r\n        function render () {\r\n          var index = bsCollapseCtrl.$targets.indexOf(element);\r\n          var active = bsCollapseCtrl.$activeIndexes();\r\n          var action = 'removeClass';\r\n          if (angular.isArray(active)) {\r\n            if (active.indexOf(index) !== -1) {\r\n              action = 'addClass';\r\n            }\r\n          } else if (index === active) {\r\n            action = 'addClass';\r\n          }\r\n\r\n          $animate[action](element, bsCollapseCtrl.$options.activeClass);\r\n        }\r\n\r\n        bsCollapseCtrl.$viewChangeListeners.push(function () {\r\n          render();\r\n        });\r\n        render();\r\n\r\n      }\r\n    };\r\n\r\n  });\r\n"],"sourceRoot":"/source/"}