{"version":3,"sources":["modules/modal.js"],"names":["angular","placement","provider","templateUrl","this","defaults","template","contentTemplate","container","element","backdrop","keyboard","html","show","size","zIndex","containerElement","$get","forEach","requestAnimationFrame","bodyElement","defaultContainerElement","layoutHideElement","dialogBaseZindex","$window","$rootScope","$bsCompiler","$animate","$timeout","$sce","dimensions","ModalFactory","config","focusableElement","scope","attr","$modal","setTimeout","options","onShow","isFunction","modalElement","findElement","length","$isShown","$emit","focus","prefixEvent","animation","onHide","removeClass","findFocusableElements","focusableElements","focusable","offsetWidth","prefixClass","offsetHeight","document","findNextFocusableElement","activeElement","filter","call","querySelectorAll","inReverse","index","undefined","toggle","prototype","reverse","indexOf","unbindBackdropEvents","off","hideOnBackdropClick","backdropElement","preventEventDefault","bindKeyboardEvents","on","$onKeyDown","evt","preventDefault","modalScope","$destroy","$element","extend","promise","$promise","compile","$new","backdropBaseZindex","id","returnFocus","parseInt","hide","key","$show","trustAsHtml","$$postDigest","left","bottom","right","css","compileData","init","data","destroy","destroyModalElement","parent","after","isElement","$scope","z-index","link","clonedElement","backdropCount","isDefined","onBeforeShow","display","defaultPrevented","addClass","customClass","validSizes","enter","minor","backdropAnimation","el","enterAnimateCallback","then","safeDigest","bindBackdropEvents","onBeforeHide","leave","leaveAnimateCallback","unbindKeyboardEvents","which","keyCode","nextFocusable","stopPropagation","shiftKey","directive","$root","$$phase","$digest","restrict","query","lg","body","sm","$options","falseValueRegExp","test","bsKey","modalClass","$observe","charAt","newValue","oldValue","$eval","$watch","isObject","bsModal","modal","content","trigger","$on"],"mappings":"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","file":"modules/modal.min.js","sourcesContent":["'use strict';\r\n\r\nangular.module('mgcrea.ngStrap.modal', ['mgcrea.ngStrap.core', 'mgcrea.ngStrap.helpers.dimensions'])\r\n\r\n  .provider('$modal', function () {\r\n\r\n    var defaults = this.defaults = {\r\n      animation: 'am-fade',\r\n      backdropAnimation: 'am-fade',\r\n      customClass: '',\r\n      prefixClass: 'modal',\r\n      prefixEvent: 'modal',\r\n      placement: 'top',\r\n      templateUrl: 'modal/modal.tpl.html',\r\n      template: '',\r\n      contentTemplate: false,\r\n      container: false,\r\n      element: null,\r\n      backdrop: true,\r\n      keyboard: true,\r\n      html: false,\r\n      show: true,\r\n      size: null,\r\n      zIndex: null,\r\n      containerElement: null\r\n    };\r\n\r\n    this.$get = function ($window, $rootScope, $bsCompiler, $animate, $timeout, $sce, dimensions) {\r\n\r\n      var forEach = angular.forEach;\r\n      var requestAnimationFrame = $window.requestAnimationFrame || $window.setTimeout;\r\n      var bodyElement = angular.element($window.document.body);\r\n\r\n      var defaultContainerElement = \"#layoutContainer\";\r\n\r\n      var layoutHideElement = angular.element(defaultContainerElement);\r\n\r\n      var backdropCount = 0;\r\n      var dialogBaseZindex = 1050;\r\n      var backdropBaseZindex = 1040;\r\n\r\n      var validSizes = {\r\n        lg: 'modal-lg',\r\n        sm: 'modal-sm'\r\n      };\r\n\r\n      function ModalFactory(config) {\r\n\r\n        var $modal = {};\r\n\r\n        // Common vars\r\n        var options = $modal.$options = angular.extend({}, defaults, config);\r\n\r\n        var promise = $modal.$promise = $bsCompiler.compile(options);\r\n        var scope = $modal.$scope = options.scope && options.scope.$new() || $rootScope.$new();\r\n\r\n        if (options.containerElement) {\r\n          layoutHideElement = angular.element(options.containerElement);\r\n        }\r\n        if (!options.element && !options.container) {\r\n          options.container = 'body';\r\n        }\r\n\r\n        if (options.zIndex) {\r\n          dialogBaseZindex = parseInt(options.zIndex, 10);\r\n          backdropBaseZindex = dialogBaseZindex - 10;\r\n        }\r\n\r\n        // Store $id to identify the triggering element in events\r\n        // give priority to options.id, otherwise, try to use\r\n        // element id if defined\r\n        $modal.$id = options.id || options.element && options.element.attr('id') || '';\r\n\r\n        $modal.returnFocus = function () {\r\n\r\n        };\r\n\r\n        // Support scope as string options\r\n        forEach(['title', 'content'], function (key) {\r\n          if (options[key]) scope[key] = $sce.trustAsHtml(options[key]);\r\n        });\r\n\r\n        // Provide scope helpers\r\n        scope.$hide = function () {\r\n          scope.$$postDigest(function () {\r\n            $modal.hide();\r\n          });\r\n        };\r\n        scope.$show = function () {\r\n          scope.$$postDigest(function () {\r\n            $modal.show();\r\n          });\r\n        };\r\n        scope.$toggle = function () {\r\n          scope.$$postDigest(function () {\r\n            $modal.toggle();\r\n          });\r\n        };\r\n        // Publish isShown as a protected var on scope\r\n        $modal.$isShown = scope.$isShown = false;\r\n\r\n        // Fetch, compile then initialize modal\r\n        var compileData;\r\n        var modalElement;\r\n        var modalScope;\r\n        var backdropElement = angular.element('<div class=\"' + options.prefixClass + '-backdrop\"/>');\r\n        backdropElement.css({ position: 'fixed', top: '0px', left: '0px', bottom: '0px', right: '0px' });\r\n        promise.then(function (data) {\r\n          compileData = data;\r\n          $modal.init();\r\n        });\r\n\r\n        $modal.init = function () {\r\n\r\n          // Options: show\r\n          if (options.show) {\r\n            scope.$$postDigest(function () {\r\n              $modal.show();\r\n            });\r\n          }\r\n\r\n        };\r\n\r\n        $modal.destroy = function () {\r\n\r\n          // Remove element\r\n          destroyModalElement();\r\n\r\n          // remove backdrop element\r\n          if (backdropElement) {\r\n            backdropElement.remove();\r\n            backdropElement = null;\r\n          }\r\n\r\n          // Destroy scope\r\n          scope.$destroy();\r\n        };\r\n\r\n        $modal.show = function () {\r\n          if ($modal.$isShown) return;\r\n\r\n          var parent;\r\n          var after;\r\n          if (angular.isElement(options.container)) {\r\n            parent = options.container;\r\n            after = options.container[0].lastChild ? angular.element(options.container[0].lastChild) : null;\r\n          } else {\r\n            if (options.container) {\r\n              parent = findElement(options.container);\r\n              after = parent[0] && parent[0].lastChild ? angular.element(parent[0].lastChild) : null;\r\n            } else {\r\n              parent = null;\r\n              after = options.element;\r\n            }\r\n          }\r\n\r\n          // destroy any existing modal elements\r\n          if (modalElement) destroyModalElement();\r\n\r\n          // create a new scope, so we can destroy it and all child scopes\r\n          // when destroying the modal element\r\n          modalScope = $modal.$scope.$new();\r\n          // Fetch a cloned element linked from template (noop callback is required)\r\n          modalElement = $modal.$element = compileData.link(modalScope, function (clonedElement, scope) { });\r\n\r\n          if (options.backdrop) {\r\n            // set z-index\r\n            modalElement.css({ 'z-index': dialogBaseZindex + (backdropCount * 20) });\r\n            backdropElement.css({ 'z-index': backdropBaseZindex + (backdropCount * 20) });\r\n\r\n            // increment number of backdrops\r\n            backdropCount++;\r\n          }\r\n\r\n          if (scope.$emit(options.prefixEvent + '.show.before', $modal).defaultPrevented) {\r\n            return;\r\n          }\r\n          if (angular.isDefined(options.onBeforeShow) && angular.isFunction(options.onBeforeShow)) {\r\n            options.onBeforeShow($modal);\r\n          }\r\n\r\n          // Set the initial positioning.\r\n          modalElement.css({ display: 'block' }).addClass(options.placement);\r\n\r\n          // Options: customClass\r\n          if (options.customClass) {\r\n            modalElement.addClass(options.customClass);\r\n          }\r\n\r\n          // Options: size\r\n          if (options.size && validSizes[options.size]) {\r\n            angular.element(findElement('.modal-dialog', modalElement[0])).addClass(validSizes[options.size]);\r\n          }\r\n\r\n          // Options: animation\r\n          if (options.animation) {\r\n            if (options.backdrop) {\r\n              backdropElement.addClass(options.backdropAnimation);\r\n            }\r\n            modalElement.addClass(options.animation);\r\n          }\r\n\r\n          if (options.backdrop) {\r\n            $animate.enter(backdropElement, bodyElement, null);\r\n          }\r\n\r\n          // Support v1.2+ $animate\r\n          // https://github.com/angular/angular.js/issues/11713\r\n          if (angular.version.minor <= 2) {\r\n            $animate.enter(modalElement, parent, after, enterAnimateCallback);\r\n          } else {\r\n            $animate.enter(modalElement, parent, after).then(enterAnimateCallback);\r\n          }\r\n\r\n          $modal.$isShown = scope.$isShown = true;\r\n          safeDigest(scope);\r\n          // Focus once the enter-animation has started\r\n          // Weird PhantomJS bug hack\r\n          var el = modalElement[0];\r\n          requestAnimationFrame(function () {\r\n            el.focus();\r\n          });\r\n\r\n          bodyElement.addClass(options.prefixClass + '-open');\r\n\r\n          layoutHideElement.attr('aria-hidden', 'true');\r\n\r\n          if (options.animation) {\r\n            bodyElement.addClass(options.prefixClass + '-with-' + options.animation);\r\n          }\r\n\r\n          // Bind events\r\n          bindBackdropEvents();\r\n          bindKeyboardEvents();\r\n        };\r\n\r\n        function enterAnimateCallback() {\r\n          scope.$emit(options.prefixEvent + '.show', $modal);\r\n          if (angular.isDefined(options.onShow) && angular.isFunction(options.onShow)) {\r\n            options.onShow($modal);\r\n          }\r\n\r\n          modalElement.attr('aria-hidden', 'false');\r\n\r\n\t\t  var focusableElement = angular.element(findElement('.modal'));\r\n\t\t  \r\n\t\t  if (focusableElement.length > 0)\r\n\t\t  {\r\n\t\t\tfocusableElement.attr('tabindex', '0');\r\n            setTimeout(function () {\r\n              focusableElement.focus();\r\n            }, 500);\r\n\t\t  }\r\n        }\r\n\r\n        $modal.hide = function () {\r\n          if (!$modal.$isShown) return;\r\n\r\n          if (scope.$emit(options.prefixEvent + '.hide.before', $modal).defaultPrevented) {\r\n            return;\r\n          }\r\n          if (angular.isDefined(options.onBeforeHide) && angular.isFunction(options.onBeforeHide)) {\r\n            options.onBeforeHide($modal);\r\n          }\r\n\r\n          modalElement.attr('aria-hidden', 'true');\r\n\r\n          if ($modal.returnFocus && typeof $modal.returnFocus === 'function') $modal.returnFocus();\r\n\r\n          // Support v1.2+ $animate\r\n          // https://github.com/angular/angular.js/issues/11713\r\n          if (angular.version.minor <= 2) {\r\n            $animate.leave(modalElement, leaveAnimateCallback);\r\n          } else {\r\n            $animate.leave(modalElement).then(leaveAnimateCallback);\r\n          }\r\n\r\n          if (options.backdrop) {\r\n            // decrement number of backdrops\r\n            backdropCount--;\r\n            $animate.leave(backdropElement);\r\n          }\r\n          $modal.$isShown = scope.$isShown = false;\r\n          safeDigest(scope);\r\n\r\n          // Unbind events\r\n          unbindBackdropEvents();\r\n          unbindKeyboardEvents();\r\n        };\r\n\r\n        function leaveAnimateCallback() {\r\n          scope.$emit(options.prefixEvent + '.hide', $modal);\r\n          if (angular.isDefined(options.onHide) && angular.isFunction(options.onHide)) {\r\n            options.onHide($modal);\r\n          }\r\n          if (findElement('.modal').length <= 0) {\r\n            bodyElement.removeClass(options.prefixClass + '-open');\r\n            layoutHideElement.attr('aria-hidden', 'false');\r\n          }\r\n          if (options.animation) {\r\n            bodyElement.removeClass(options.prefixClass + '-with-' + options.animation);\r\n          }\r\n        }\r\n\r\n        function findFocusableElements() {\r\n          // Add all elements we want to include in our selection\r\n          var focusableElements = 'a:not([disabled]), button:not([disabled]), input:not([disabled]), [tabindex]:not([disabled]):not([tabindex=\"-1\"])';\r\n          if (document.activeElement) {\r\n            var focusable = Array.prototype.filter.call(modalElement[0].querySelectorAll(focusableElements),\r\n              function (element) {\r\n                // Check for visibility while always include the current activeElement\r\n                return element.offsetWidth > 0 || element.offsetHeight > 0 || element === document.activeElement;\r\n              });\r\n\r\n            return focusable;\r\n          }\r\n        }\r\n\r\n        function findNextFocusableElement(inReverse) {\r\n          if (document.activeElement) {\r\n            var focusable = findFocusableElements();\r\n            if (focusable === undefined) return;\r\n            if (inReverse) {\r\n              focusable = Array.prototype.reverse.call(focusable);\r\n            }\r\n\r\n            var index = focusable.indexOf(document.activeElement);\r\n            return focusable[index + 1];\r\n          }\r\n        }\r\n\r\n        $modal.toggle = function () {\r\n          if ($modal.$isShown) {\r\n            $modal.hide();\r\n          } else {\r\n            $modal.show();\r\n          }\r\n        };\r\n\r\n        $modal.focus = function () {\r\n          modalElement[0].focus();\r\n        };\r\n\r\n        // Protected methods\r\n\r\n        $modal.$onKeyUp = function (evt) {\r\n\r\n          // Escape was pressed on an open modal. Hide it.\r\n          if (evt.which === 27 && $modal.$isShown) {\r\n            $modal.hide();\r\n            evt.stopPropagation();\r\n          }\r\n        };\r\n\r\n        $modal.$onKeyDown = function (evt) {\r\n          if (options.keyboard) {\r\n            if (evt.keyCode === 9) {\r\n\r\n              var nextFocusable = findNextFocusableElement(evt.shiftKey);\r\n              if (nextFocusable === undefined) {\r\n                if (evt.preventDefault) evt.preventDefault();\r\n                if (evt.stopPropagation) evt.stopPropagation();\r\n\r\n                var focusable = findFocusableElements();\r\n                if (evt.shiftKey) {\r\n                  focusable[focusable.length - 1].focus();\r\n                } else {\r\n                  focusable[0].focus();\r\n                }\r\n              }\r\n            }\r\n          }\r\n        };\r\n\r\n        function bindBackdropEvents() {\r\n          if (options.backdrop) {\r\n            modalElement.on('click', hideOnBackdropClick);\r\n            backdropElement.on('click', hideOnBackdropClick);\r\n            backdropElement.on('wheel', preventEventDefault);\r\n          }\r\n        }\r\n\r\n        function unbindBackdropEvents() {\r\n          if (options.backdrop) {\r\n            modalElement.off('click', hideOnBackdropClick);\r\n            backdropElement.off('click', hideOnBackdropClick);\r\n            backdropElement.off('wheel', preventEventDefault);\r\n          }\r\n        }\r\n\r\n        function bindKeyboardEvents() {\r\n          if (options.keyboard) {\r\n            modalElement.on('keyup', $modal.$onKeyUp);\r\n            modalElement.on('keydown', $modal.$onKeyDown);\r\n          }\r\n        }\r\n\r\n        function unbindKeyboardEvents() {\r\n          if (options.keyboard) {\r\n            modalElement.off('keyup', $modal.$onKeyUp);\r\n            modalElement.off('keydown', $modal.$onKeyDown);\r\n          }\r\n        }\r\n\r\n        // Private helpers\r\n\r\n        function hideOnBackdropClick(evt) {\r\n          if (evt.target !== evt.currentTarget) return;\r\n          if (options.backdrop === 'static') {\r\n            $modal.focus();\r\n          } else {\r\n            $modal.hide();\r\n          }\r\n        }\r\n\r\n        function preventEventDefault(evt) {\r\n          evt.preventDefault();\r\n        }\r\n\r\n        function destroyModalElement() {\r\n          if ($modal.$isShown && modalElement !== null) {\r\n            // un-bind events\r\n            unbindBackdropEvents();\r\n            unbindKeyboardEvents();\r\n          }\r\n\r\n          if (modalScope) {\r\n            modalScope.$destroy();\r\n            modalScope = null;\r\n          }\r\n\r\n          if (modalElement) {\r\n            modalElement.remove();\r\n            modalElement = $modal.$element = null;\r\n          }\r\n        }\r\n\r\n        return $modal;\r\n\r\n      }\r\n\r\n      // Helper functions\r\n\r\n      function safeDigest(scope) {\r\n        /* eslint-disable no-unused-expressions */\r\n        scope.$$phase || (scope.$root && scope.$root.$$phase) || scope.$digest();\r\n        /* eslint-enable no-unused-expressions */\r\n      }\r\n\r\n      function findElement(query, element) {\r\n        return angular.element((element || document).querySelectorAll(query));\r\n      }\r\n\r\n      return ModalFactory;\r\n\r\n    };\r\n\r\n  })\r\n\r\n  .directive('bsModal', function ($window, $sce, $parse, $modal) {\r\n\r\n    return {\r\n      restrict: 'EAC',\r\n      scope: true,\r\n      link: function postLink(scope, element, attr, transclusion) {\r\n\r\n        // Directive options\r\n        var options = { scope: scope, element: element, show: false };\r\n        angular.forEach(['template', 'templateUrl', 'controller', 'controllerAs', 'contentTemplate', 'placement', 'backdrop', 'keyboard', 'html', 'container', 'animation', 'backdropAnimation', 'id', 'prefixEvent', 'prefixClass', 'customClass', 'modalClass', 'size', 'zIndex'], function (key) {\r\n          if (angular.isDefined(attr[key])) options[key] = attr[key];\r\n        });\r\n\r\n        // Options: alias modalClass to customClass\r\n        if (options.modalClass) {\r\n          options.customClass = options.modalClass;\r\n        }\r\n\r\n        // use string regex match boolean attr falsy values, leave truthy values be\r\n        var falseValueRegExp = /^(false|0|)$/i;\r\n        angular.forEach(['backdrop', 'keyboard', 'html', 'container'], function (key) {\r\n          if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) options[key] = false;\r\n        });\r\n\r\n        // bind functions from the attrs to the show and hide events\r\n        angular.forEach(['onBeforeShow', 'onShow', 'onBeforeHide', 'onHide'], function (key) {\r\n          var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\r\n          if (angular.isDefined(attr[bsKey])) {\r\n            options[key] = scope.$eval(attr[bsKey]);\r\n          }\r\n        });\r\n\r\n        // Support scope as data-attrs\r\n        angular.forEach(['title', 'content'], function (key) {\r\n          if (attr[key]) {\r\n            attr.$observe(key, function (newValue, oldValue) {\r\n              scope[key] = $sce.trustAsHtml(newValue);\r\n            });\r\n          }\r\n        });\r\n\r\n        // Support scope as an object\r\n        if (attr.bsModal) {\r\n          scope.$watch(attr.bsModal, function (newValue, oldValue) {\r\n            if (angular.isObject(newValue)) {\r\n              angular.extend(scope, newValue);\r\n            } else {\r\n              scope.content = newValue;\r\n            }\r\n          }, true);\r\n        }\r\n\r\n        // Initialize modal\r\n        var modal = $modal(options);\r\n\r\n        if (options.keyboard) {\r\n          modal.returnFocus = function () {\r\n            element[0].focus();\r\n          };\r\n        }\r\n\r\n        // Trigger\r\n        element.on(attr.trigger || 'click', modal.toggle);\r\n\r\n        // Garbage collection\r\n        scope.$on('$destroy', function () {\r\n          if (modal) modal.destroy();\r\n          options = null;\r\n          modal = null;\r\n        });\r\n\r\n      }\r\n    };\r\n\r\n  });\r\n"],"sourceRoot":"/source/"}