{"version":3,"sources":["modules/modal.js"],"names":["angular","placement","provider","templateUrl","this","defaults","template","contentTemplate","container","element","backdrop","keyboard","html","show","size","zIndex","containerElement","$get","forEach","requestAnimationFrame","bodyElement","layoutHideElement","backdropCount","backdropBaseZindex","$window","$rootScope","$bsCompiler","$animate","$timeout","$sce","dimensions","ModalFactory","config","modalElement","scope","length","attr","onShow","isFunction","options","unbindKeyboardEvents","$modal","$isShown","prefixEvent","defaultPrevented","$emit","animation","onHide","removeClass","findElement","findFocusableElements","focusableElements","focusable","offsetWidth","prefixClass","offsetHeight","document","findNextFocusableElement","activeElement","filter","call","querySelectorAll","inReverse","index","undefined","toggle","prototype","reverse","indexOf","unbindBackdropEvents","off","hideOnBackdropClick","backdropElement","preventEventDefault","bindKeyboardEvents","on","$onKeyDown","evt","focus","preventDefault","modalScope","$destroy","$element","extend","promise","$promise","compile","$new","dialogBaseZindex","id","returnFocus","parseInt","hide","key","$show","trustAsHtml","$$postDigest","left","bottom","right","css","compileData","init","data","destroy","destroyModalElement","parent","after","isElement","$scope","z-index","link","clonedElement","isDefined","onBeforeShow","display","addClass","customClass","validSizes","enter","minor","backdropAnimation","el","enterAnimateCallback","then","safeDigest","bindBackdropEvents","onBeforeHide","leave","leaveAnimateCallback","which","stopPropagation","$onKeyUp","keyCode","nextFocusable","shiftKey","directive","$root","$$phase","$digest","restrict","query","lg","setTimeout","sm","body","$options","falseValueRegExp","test","bsKey","modalClass","$observe","charAt","newValue","oldValue","$eval","$watch","isObject","bsModal","modal","content","trigger","$on"],"mappings":"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","file":"modules/modal.min.js","sourcesContent":["'use strict';\n\nangular.module('mgcrea.ngStrap.modal', ['mgcrea.ngStrap.core', 'mgcrea.ngStrap.helpers.dimensions'])\n\n  .provider('$modal', function () {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      backdropAnimation: 'am-fade',\n      customClass: '',\n      prefixClass: 'modal',\n      prefixEvent: 'modal',\n      placement: 'top',\n      templateUrl: 'modal/modal.tpl.html',\n      template: '',\n      contentTemplate: false,\n      container: false,\n      element: null,\n      backdrop: true,\n      keyboard: true,\n      html: false,\n      show: true,\n      size: null,\n      zIndex: null,\n      containerElement: null\n    };\n\n    this.$get = function ($window, $rootScope, $bsCompiler, $animate, $timeout, $sce, dimensions) {\n\n      var forEach = angular.forEach;\n      var requestAnimationFrame = $window.requestAnimationFrame || $window.setTimeout;\n      var bodyElement = angular.element($window.document.body);\n\n      var layoutHideElement = angular.element('#layoutContainer');\n\n      var backdropCount = 0;\n      var dialogBaseZindex = 1050;\n      var backdropBaseZindex = 1040;\n\n      var validSizes = {\n        lg: 'modal-lg',\n        sm: 'modal-sm'\n      };\n\n      function ModalFactory (config) {\n\n        var $modal = {};\n\n        // Common vars\n        var options = $modal.$options = angular.extend({}, defaults, config);\n\n        var promise = $modal.$promise = $bsCompiler.compile(options);\n        var scope = $modal.$scope = options.scope && options.scope.$new() || $rootScope.$new();\n\n        if (options.containerElement) {\n          layoutHideElement = angular.element(options.containerElement);\n        }\n        if (!options.element && !options.container) {\n          options.container = 'body';\n        }\n\n        if (options.zIndex) {\n          dialogBaseZindex = parseInt(options.zIndex, 10);\n          backdropBaseZindex = dialogBaseZindex - 10;\n        }\n\n        // Store $id to identify the triggering element in events\n        // give priority to options.id, otherwise, try to use\n        // element id if defined\n        $modal.$id = options.id || options.element && options.element.attr('id') || '';\n\n        $modal.returnFocus = function () {\n\n        };\n\n        // Support scope as string options\n        forEach(['title', 'content'], function (key) {\n          if (options[key]) scope[key] = $sce.trustAsHtml(options[key]);\n        });\n\n        // Provide scope helpers\n        scope.$hide = function () {\n          scope.$$postDigest(function () {\n            $modal.hide();\n          });\n        };\n        scope.$show = function () {\n          scope.$$postDigest(function () {\n            $modal.show();\n          });\n        };\n        scope.$toggle = function () {\n          scope.$$postDigest(function () {\n            $modal.toggle();\n          });\n        };\n        // Publish isShown as a protected var on scope\n        $modal.$isShown = scope.$isShown = false;\n\n        // Fetch, compile then initialize modal\n        var compileData;\n        var modalElement;\n        var modalScope;\n        var backdropElement = angular.element('<div class=\"' + options.prefixClass + '-backdrop\"/>');\n        backdropElement.css({\n          position: 'fixed',\n          top: '0px',\n          left: '0px',\n          bottom: '0px',\n          right: '0px'\n        });\n        promise.then(function (data) {\n          compileData = data;\n          $modal.init();\n        });\n\n        $modal.init = function () {\n\n          // Options: show\n          if (options.show) {\n            scope.$$postDigest(function () {\n              $modal.show();\n            });\n          }\n\n        };\n\n        $modal.destroy = function () {\n\n          // Remove element\n          destroyModalElement();\n\n          // remove backdrop element\n          if (backdropElement) {\n            backdropElement.remove();\n            backdropElement = null;\n          }\n\n          // Destroy scope\n          scope.$destroy();\n        };\n\n        $modal.show = function () {\n          if ($modal.$isShown) return;\n\n          var parent;\n          var after;\n          if (angular.isElement(options.container)) {\n            parent = options.container;\n            after = options.container[0].lastChild ? angular.element(options.container[0].lastChild) : null;\n          } else {\n            if (options.container) {\n              parent = findElement(options.container);\n              after = parent[0] && parent[0].lastChild ? angular.element(parent[0].lastChild) : null;\n            } else {\n              parent = null;\n              after = options.element;\n            }\n          }\n\n          // destroy any existing modal elements\n          if (modalElement) destroyModalElement();\n\n          // create a new scope, so we can destroy it and all child scopes\n          // when destroying the modal element\n          modalScope = $modal.$scope.$new();\n          // Fetch a cloned element linked from template (noop callback is required)\n          modalElement = $modal.$element = compileData.link(modalScope, function (clonedElement, scope) {});\n\n          if (options.backdrop) {\n            // set z-index\n            modalElement.css({\n              'z-index': dialogBaseZindex + (backdropCount * 20)\n            });\n            backdropElement.css({\n              'z-index': backdropBaseZindex + (backdropCount * 20)\n            });\n\n            // increment number of backdrops\n            backdropCount++;\n          }\n\n          if (scope.$emit(options.prefixEvent + '.show.before', $modal).defaultPrevented) {\n            return;\n          }\n          if (angular.isDefined(options.onBeforeShow) && angular.isFunction(options.onBeforeShow)) {\n            options.onBeforeShow($modal);\n          }\n\n          // Set the initial positioning.\n          modalElement.css({\n            display: 'block'\n          }).addClass(options.placement);\n\n          // Options: customClass\n          if (options.customClass) {\n            modalElement.addClass(options.customClass);\n          }\n\n          // Options: size\n          if (options.size && validSizes[options.size]) {\n            angular.element(findElement('.modal-dialog', modalElement[0])).addClass(validSizes[options.size]);\n          }\n\n          // Options: animation\n          if (options.animation) {\n            if (options.backdrop) {\n              backdropElement.addClass(options.backdropAnimation);\n            }\n            modalElement.addClass(options.animation);\n          }\n\n          if (options.backdrop) {\n            $animate.enter(backdropElement, bodyElement, null);\n          }\n\n          // Support v1.2+ $animate\n          // https://github.com/angular/angular.js/issues/11713\n          if (angular.version.minor <= 2) {\n            $animate.enter(modalElement, parent, after, enterAnimateCallback);\n          } else {\n            $animate.enter(modalElement, parent, after).then(enterAnimateCallback);\n          }\n\n          $modal.$isShown = scope.$isShown = true;\n          safeDigest(scope);\n          // Focus once the enter-animation has started\n          // Weird PhantomJS bug hack\n          var el = modalElement[0];\n          requestAnimationFrame(function () {\n            el.focus();\n          });\n\n          bodyElement.addClass(options.prefixClass + '-open');\n\n          layoutHideElement.attr('aria-hidden', 'true');\n\n          if (options.animation) {\n            bodyElement.addClass(options.prefixClass + '-with-' + options.animation);\n          }\n\n          // Bind events\n          bindBackdropEvents();\n          bindKeyboardEvents();\n        };\n\n        function enterAnimateCallback () {\n          scope.$emit(options.prefixEvent + '.show', $modal);\n          if (angular.isDefined(options.onShow) && angular.isFunction(options.onShow)) {\n            options.onShow($modal);\n          }\n\n          modalElement.attr('aria-hidden', 'false');\n\t\t  modalElement.attr('tabindex', '0');\n\t\t  modalElement.focus();\n\n\t\t  if(!modalElement.length || !angular.element(modalElement[0]).hasClass(\"modal\"))\n\t\t  {\n\t\t\tlayoutHideElement.attr('aria-hidden', 'false');\n\t\t\tunbindKeyboardEvents();\n\t\t  }\n        }\n\n        $modal.hide = function () {\n          if (!$modal.$isShown) return;\n\n          if (scope.$emit(options.prefixEvent + '.hide.before', $modal).defaultPrevented) {\n            return;\n          }\n          if (angular.isDefined(options.onBeforeHide) && angular.isFunction(options.onBeforeHide)) {\n            options.onBeforeHide($modal);\n          }\n\n          modalElement.attr('aria-hidden', 'true');\n\n          if ($modal.returnFocus && typeof $modal.returnFocus === 'function') $modal.returnFocus();\n\n          // Support v1.2+ $animate\n          // https://github.com/angular/angular.js/issues/11713\n          if (angular.version.minor <= 2) {\n            $animate.leave(modalElement, leaveAnimateCallback);\n          } else {\n            $animate.leave(modalElement).then(leaveAnimateCallback);\n          }\n\n          if (options.backdrop) {\n            // decrement number of backdrops\n            backdropCount--;\n            $animate.leave(backdropElement);\n          }\n          $modal.$isShown = scope.$isShown = false;\n          safeDigest(scope);\n\n          // Unbind events\n          unbindBackdropEvents();\n          unbindKeyboardEvents();\n        };\n\n        function leaveAnimateCallback () {\n          scope.$emit(options.prefixEvent + '.hide', $modal);\n          if (angular.isDefined(options.onHide) && angular.isFunction(options.onHide)) {\n            options.onHide($modal);\n          }\n          if (findElement('.modal').length <= 0) {\n            bodyElement.removeClass(options.prefixClass + '-open');\n            layoutHideElement.attr('aria-hidden', 'false');\n          }\n          if (options.animation) {\n            bodyElement.removeClass(options.prefixClass + '-with-' + options.animation);\n          }\n        }\n\n        function findFocusableElements () {\n          // Add all elements we want to include in our selection\n          var focusableElements = 'a:not([disabled]), button:not([disabled]), input:not([disabled]), [tabindex]:not([disabled]):not([tabindex=\"-1\"])';\n          if (document.activeElement) {\n            var focusable = Array.prototype.filter.call(modalElement[0].querySelectorAll(focusableElements),\n              function (element) {\n                // Check for visibility while always include the current activeElement\n                return element.offsetWidth > 0 || element.offsetHeight > 0 || element === document.activeElement;\n              });\n\n            return focusable;\n          }\n        }\n\n        function findNextFocusableElement (inReverse) {\n          if (document.activeElement) {\n            var focusable = findFocusableElements();\n            if (focusable === undefined) return;\n            if (inReverse) {\n              focusable = Array.prototype.reverse.call(focusable);\n            }\n\n            var index = focusable.indexOf(document.activeElement);\n            return focusable[index + 1];\n          }\n        }\n\n        $modal.toggle = function () {\n          if ($modal.$isShown) {\n            $modal.hide();\n          } else {\n            $modal.show();\n          }\n        };\n\n        $modal.focus = function () {\n          modalElement[0].focus();\n        };\n\n        // Protected methods\n\n        $modal.$onKeyUp = function (evt) {\n\n          // Escape was pressed on an open modal. Hide it.  Backspace key, nothing happen.\n          if ((evt.which === 8||evt.which === 27) && $modal.$isShown) {\n            if (evt.which === 27) {\n               $modal.hide();\n            }\n            evt.stopPropagation();\n          }\n        };\n\n        $modal.$onKeyDown = function (evt) {\n          if (options.keyboard) {\n            if (evt.keyCode === 8 && evt.target.tagName!=='TEXTAREA' && evt.target.tagName!=='INPUT') {\n                evt.preventDefault();\n            }\t\t\t\t\n\t\t\t  \n            if (evt.keyCode === 9) {\n\n              var nextFocusable = findNextFocusableElement(evt.shiftKey);\n              if (nextFocusable === undefined) {\n                if (evt.preventDefault) evt.preventDefault();\n                if (evt.stopPropagation) evt.stopPropagation();\n\n                var focusable = findFocusableElements();\n                if (evt.shiftKey) {\n                  focusable[focusable.length - 1].focus();\n                } else {\n                  focusable[0].focus();\n                }\n              }\n            }\n          }\n        };\n\n        function bindBackdropEvents () {\n          if (options.backdrop) {\n            modalElement.on('click', hideOnBackdropClick);\n            backdropElement.on('click', hideOnBackdropClick);\n            backdropElement.on('wheel', preventEventDefault);\n          }\n        }\n\n        function unbindBackdropEvents () {\n          if (options.backdrop) {\n            modalElement.off('click', hideOnBackdropClick);\n            backdropElement.off('click', hideOnBackdropClick);\n            backdropElement.off('wheel', preventEventDefault);\n          }\n        }\n\n        function bindKeyboardEvents () {\n          if (options.keyboard) {\n            modalElement.on('keyup', $modal.$onKeyUp);\n            modalElement.on('keydown', $modal.$onKeyDown);\n          }\n        }\n\n        function unbindKeyboardEvents () {\n          if (options.keyboard) {\n            modalElement.off('keyup', $modal.$onKeyUp);\n            modalElement.off('keydown', $modal.$onKeyDown);\n          }\n        }\n\n        // Private helpers\n\n        function hideOnBackdropClick (evt) {\n          if (evt.target !== evt.currentTarget) return;\n          if (options.backdrop === 'static') {\n            $modal.focus();\n          } else {\n            $modal.hide();\n          }\n        }\n\n        function preventEventDefault (evt) {\n          evt.preventDefault();\n        }\n\n        function destroyModalElement () {\n          if ($modal.$isShown && modalElement !== null) {\n            // un-bind events\n            unbindBackdropEvents();\n            unbindKeyboardEvents();\n          }\n\n          if (modalScope) {\n            modalScope.$destroy();\n            modalScope = null;\n          }\n\n          if (modalElement) {\n            modalElement.remove();\n            modalElement = $modal.$element = null;\n          }\n        }\n\n        return $modal;\n\n      }\n\n      // Helper functions\n\n      function safeDigest (scope) {\n        /* eslint-disable no-unused-expressions */\n        scope.$$phase || (scope.$root && scope.$root.$$phase) || scope.$digest();\n        /* eslint-enable no-unused-expressions */\n      }\n\n      function findElement (query, element) {\n        return angular.element((element || document).querySelectorAll(query));\n      }\n\n      return ModalFactory;\n\n    };\n\n  })\n\n  .directive('bsModal', function ($window, $sce, $parse, $modal) {\n\n    return {\n      restrict: 'EAC',\n      scope: true,\n      link: function postLink (scope, element, attr, transclusion) {\n\n        // Directive options\n        var options = {\n          scope: scope,\n          element: element,\n          show: false\n        };\n        angular.forEach(['template', 'templateUrl', 'controller', 'controllerAs', 'contentTemplate', 'placement', 'backdrop', 'keyboard', 'html', 'container', 'animation', 'backdropAnimation', 'id', 'prefixEvent', 'prefixClass', 'customClass', 'modalClass', 'size', 'zIndex'], function (key) {\n          if (angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        // Options: alias modalClass to customClass\n        if (options.modalClass) {\n          options.customClass = options.modalClass;\n        }\n\n        // use string regex match boolean attr falsy values, leave truthy values be\n        var falseValueRegExp = /^(false|0|)$/i;\n        angular.forEach(['backdrop', 'keyboard', 'html', 'container'], function (key) {\n          if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) options[key] = false;\n        });\n\n        // bind functions from the attrs to the show and hide events\n        angular.forEach(['onBeforeShow', 'onShow', 'onBeforeHide', 'onHide'], function (key) {\n          var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\n          if (angular.isDefined(attr[bsKey])) {\n            options[key] = scope.$eval(attr[bsKey]);\n          }\n        });\n\n        // Support scope as data-attrs\n        angular.forEach(['title', 'content'], function (key) {\n          if (attr[key]) {\n            attr.$observe(key, function (newValue, oldValue) {\n              scope[key] = $sce.trustAsHtml(newValue);\n            });\n          }\n        });\n\n        // Support scope as an object\n        if (attr.bsModal) {\n          scope.$watch(attr.bsModal, function (newValue, oldValue) {\n            if (angular.isObject(newValue)) {\n              angular.extend(scope, newValue);\n            } else {\n              scope.content = newValue;\n            }\n          }, true);\n        }\n\n        // Initialize modal\n        var modal = $modal(options);\n\n        if (options.keyboard) {\n          modal.returnFocus = function () {\n            element[0].focus();\n          };\n        }\n\n        // Trigger\n        element.on(attr.trigger || 'click', modal.toggle);\n\n        // Garbage collection\n        scope.$on('$destroy', function () {\n          if (modal) modal.destroy();\n          options = null;\n          modal = null;\n        });\n\n      }\n    };\n\n  });\n"],"sourceRoot":"/source/"}