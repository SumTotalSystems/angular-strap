{"version":3,"sources":["modules/modal.js"],"names":["angular","placement","provider","templateUrl","this","defaults","template","contentTemplate","container","element","backdrop","keyboard","html","show","size","zIndex","containerElement","$get","forEach","requestAnimationFrame","bodyElement","layoutHideElement","backdropCount","backdropBaseZindex","$window","$rootScope","$bsCompiler","$animate","$timeout","$sce","dimensions","ModalFactory","config","modalElement","scope","length","attr","onShow","isFunction","options","unbindKeyboardEvents","$modal","$isShown","prefixEvent","defaultPrevented","$emit","animation","onHide","removeClass","findElement","findFocusableElements","focusableElements","focusable","offsetWidth","prefixClass","offsetHeight","document","findNextFocusableElement","activeElement","filter","call","querySelectorAll","inReverse","index","undefined","toggle","prototype","reverse","indexOf","unbindBackdropEvents","off","hideOnBackdropClick","backdropElement","preventEventDefault","bindKeyboardEvents","on","$onKeyDown","evt","focus","preventDefault","modalScope","$destroy","$element","extend","promise","$promise","compile","$new","dialogBaseZindex","id","returnFocus","parseInt","hide","key","$show","trustAsHtml","$$postDigest","left","bottom","right","css","compileData","init","data","destroy","destroyModalElement","parent","after","isElement","$scope","z-index","link","clonedElement","isDefined","onBeforeShow","display","addClass","customClass","validSizes","enter","minor","backdropAnimation","el","enterAnimateCallback","then","safeDigest","bindBackdropEvents","onBeforeHide","leave","leaveAnimateCallback","which","stopPropagation","$onKeyUp","keyCode","nextFocusable","shiftKey","directive","$root","$$phase","$digest","restrict","query","lg","setTimeout","sm","body","$options","falseValueRegExp","test","bsKey","modalClass","$observe","charAt","newValue","oldValue","$eval","$watch","isObject","bsModal","modal","content","trigger","$on"],"mappings":"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","file":"modules/modal.min.js","sourcesContent":["'use strict';\r\n\r\nangular.module('mgcrea.ngStrap.modal', ['mgcrea.ngStrap.core', 'mgcrea.ngStrap.helpers.dimensions'])\r\n\r\n  .provider('$modal', function () {\r\n\r\n    var defaults = this.defaults = {\r\n      animation: 'am-fade',\r\n      backdropAnimation: 'am-fade',\r\n      customClass: '',\r\n      prefixClass: 'modal',\r\n      prefixEvent: 'modal',\r\n      placement: 'top',\r\n      templateUrl: 'modal/modal.tpl.html',\r\n      template: '',\r\n      contentTemplate: false,\r\n      container: false,\r\n      element: null,\r\n      backdrop: true,\r\n      keyboard: true,\r\n      html: false,\r\n      show: true,\r\n      size: null,\r\n      zIndex: null,\r\n      containerElement: null\r\n    };\r\n\r\n    this.$get = function ($window, $rootScope, $bsCompiler, $animate, $timeout, $sce, dimensions) {\r\n\r\n      var forEach = angular.forEach;\r\n      var requestAnimationFrame = $window.requestAnimationFrame || $window.setTimeout;\r\n      var bodyElement = angular.element($window.document.body);\r\n\r\n      var layoutHideElement = angular.element('#layoutContainer');\r\n\r\n      var backdropCount = 0;\r\n      var dialogBaseZindex = 1050;\r\n      var backdropBaseZindex = 1040;\r\n\r\n      var validSizes = {\r\n        lg: 'modal-lg',\r\n        sm: 'modal-sm'\r\n      };\r\n\r\n      function ModalFactory (config) {\r\n\r\n        var $modal = {};\r\n\r\n        // Common vars\r\n        var options = $modal.$options = angular.extend({}, defaults, config);\r\n\r\n        var promise = $modal.$promise = $bsCompiler.compile(options);\r\n        var scope = $modal.$scope = options.scope && options.scope.$new() || $rootScope.$new();\r\n\r\n        if (options.containerElement) {\r\n          layoutHideElement = angular.element(options.containerElement);\r\n        }\r\n        if (!options.element && !options.container) {\r\n          options.container = 'body';\r\n        }\r\n\r\n        if (options.zIndex) {\r\n          dialogBaseZindex = parseInt(options.zIndex, 10);\r\n          backdropBaseZindex = dialogBaseZindex - 10;\r\n        }\r\n\r\n        // Store $id to identify the triggering element in events\r\n        // give priority to options.id, otherwise, try to use\r\n        // element id if defined\r\n        $modal.$id = options.id || options.element && options.element.attr('id') || '';\r\n\r\n        $modal.returnFocus = function () {\r\n\r\n        };\r\n\r\n        // Support scope as string options\r\n        forEach(['title', 'content'], function (key) {\r\n          if (options[key]) scope[key] = $sce.trustAsHtml(options[key]);\r\n        });\r\n\r\n        // Provide scope helpers\r\n        scope.$hide = function () {\r\n          scope.$$postDigest(function () {\r\n            $modal.hide();\r\n          });\r\n        };\r\n        scope.$show = function () {\r\n          scope.$$postDigest(function () {\r\n            $modal.show();\r\n          });\r\n        };\r\n        scope.$toggle = function () {\r\n          scope.$$postDigest(function () {\r\n            $modal.toggle();\r\n          });\r\n        };\r\n        // Publish isShown as a protected var on scope\r\n        $modal.$isShown = scope.$isShown = false;\r\n\r\n        // Fetch, compile then initialize modal\r\n        var compileData;\r\n        var modalElement;\r\n        var modalScope;\r\n        var backdropElement = angular.element('<div class=\"' + options.prefixClass + '-backdrop\"/>');\r\n        backdropElement.css({\r\n          position: 'fixed',\r\n          top: '0px',\r\n          left: '0px',\r\n          bottom: '0px',\r\n          right: '0px'\r\n        });\r\n        promise.then(function (data) {\r\n          compileData = data;\r\n          $modal.init();\r\n        });\r\n\r\n        $modal.init = function () {\r\n\r\n          // Options: show\r\n          if (options.show) {\r\n            scope.$$postDigest(function () {\r\n              $modal.show();\r\n            });\r\n          }\r\n\r\n        };\r\n\r\n        $modal.destroy = function () {\r\n\r\n          // Remove element\r\n          destroyModalElement();\r\n\r\n          // remove backdrop element\r\n          if (backdropElement) {\r\n            backdropElement.remove();\r\n            backdropElement = null;\r\n          }\r\n\r\n          // Destroy scope\r\n          scope.$destroy();\r\n        };\r\n\r\n        $modal.show = function () {\r\n          if ($modal.$isShown) return;\r\n\r\n          var parent;\r\n          var after;\r\n          if (angular.isElement(options.container)) {\r\n            parent = options.container;\r\n            after = options.container[0].lastChild ? angular.element(options.container[0].lastChild) : null;\r\n          } else {\r\n            if (options.container) {\r\n              parent = findElement(options.container);\r\n              after = parent[0] && parent[0].lastChild ? angular.element(parent[0].lastChild) : null;\r\n            } else {\r\n              parent = null;\r\n              after = options.element;\r\n            }\r\n          }\r\n\r\n          // destroy any existing modal elements\r\n          if (modalElement) destroyModalElement();\r\n\r\n          // create a new scope, so we can destroy it and all child scopes\r\n          // when destroying the modal element\r\n          modalScope = $modal.$scope.$new();\r\n          // Fetch a cloned element linked from template (noop callback is required)\r\n          modalElement = $modal.$element = compileData.link(modalScope, function (clonedElement, scope) {});\r\n\r\n          if (options.backdrop) {\r\n            // set z-index\r\n            modalElement.css({\r\n              'z-index': dialogBaseZindex + (backdropCount * 20)\r\n            });\r\n            backdropElement.css({\r\n              'z-index': backdropBaseZindex + (backdropCount * 20)\r\n            });\r\n\r\n            // increment number of backdrops\r\n            backdropCount++;\r\n          }\r\n\r\n          if (scope.$emit(options.prefixEvent + '.show.before', $modal).defaultPrevented) {\r\n            return;\r\n          }\r\n          if (angular.isDefined(options.onBeforeShow) && angular.isFunction(options.onBeforeShow)) {\r\n            options.onBeforeShow($modal);\r\n          }\r\n\r\n          // Set the initial positioning.\r\n          modalElement.css({\r\n            display: 'block'\r\n          }).addClass(options.placement);\r\n\r\n          // Options: customClass\r\n          if (options.customClass) {\r\n            modalElement.addClass(options.customClass);\r\n          }\r\n\r\n          // Options: size\r\n          if (options.size && validSizes[options.size]) {\r\n            angular.element(findElement('.modal-dialog', modalElement[0])).addClass(validSizes[options.size]);\r\n          }\r\n\r\n          // Options: animation\r\n          if (options.animation) {\r\n            if (options.backdrop) {\r\n              backdropElement.addClass(options.backdropAnimation);\r\n            }\r\n            modalElement.addClass(options.animation);\r\n          }\r\n\r\n          if (options.backdrop) {\r\n            $animate.enter(backdropElement, bodyElement, null);\r\n          }\r\n\r\n          // Support v1.2+ $animate\r\n          // https://github.com/angular/angular.js/issues/11713\r\n          if (angular.version.minor <= 2) {\r\n            $animate.enter(modalElement, parent, after, enterAnimateCallback);\r\n          } else {\r\n            $animate.enter(modalElement, parent, after).then(enterAnimateCallback);\r\n          }\r\n\r\n          $modal.$isShown = scope.$isShown = true;\r\n          safeDigest(scope);\r\n          // Focus once the enter-animation has started\r\n          // Weird PhantomJS bug hack\r\n          var el = modalElement[0];\r\n          requestAnimationFrame(function () {\r\n            el.focus();\r\n          });\r\n\r\n          bodyElement.addClass(options.prefixClass + '-open');\r\n\r\n          layoutHideElement.attr('aria-hidden', 'true');\r\n\r\n          if (options.animation) {\r\n            bodyElement.addClass(options.prefixClass + '-with-' + options.animation);\r\n          }\r\n\r\n          // Bind events\r\n          bindBackdropEvents();\r\n          bindKeyboardEvents();\r\n        };\r\n\r\n        function enterAnimateCallback () {\r\n          scope.$emit(options.prefixEvent + '.show', $modal);\r\n          if (angular.isDefined(options.onShow) && angular.isFunction(options.onShow)) {\r\n            options.onShow($modal);\r\n          }\r\n\r\n          modalElement.attr('aria-hidden', 'false');\r\n          modalElement.attr('tabindex', '0');\r\n          modalElement.focus();\r\n          if (!modalElement.length || !angular.element(modalElement[0]).hasClass('modal')) {\r\n            layoutHideElement.attr('aria-hidden', 'false');\r\n            unbindKeyboardEvents();\r\n          }\r\n        }\r\n\r\n        $modal.hide = function () {\r\n          if (!$modal.$isShown) return;\r\n\r\n          if (scope.$emit(options.prefixEvent + '.hide.before', $modal).defaultPrevented) {\r\n            return;\r\n          }\r\n          if (angular.isDefined(options.onBeforeHide) && angular.isFunction(options.onBeforeHide)) {\r\n            options.onBeforeHide($modal);\r\n          }\r\n\r\n          modalElement.attr('aria-hidden', 'true');\r\n\r\n          if ($modal.returnFocus && typeof $modal.returnFocus === 'function') $modal.returnFocus();\r\n\r\n          // Support v1.2+ $animate\r\n          // https://github.com/angular/angular.js/issues/11713\r\n          if (angular.version.minor <= 2) {\r\n            $animate.leave(modalElement, leaveAnimateCallback);\r\n          } else {\r\n            $animate.leave(modalElement).then(leaveAnimateCallback);\r\n          }\r\n\r\n          if (options.backdrop) {\r\n            // decrement number of backdrops\r\n            backdropCount--;\r\n            $animate.leave(backdropElement);\r\n          }\r\n          $modal.$isShown = scope.$isShown = false;\r\n          safeDigest(scope);\r\n\r\n          // Unbind events\r\n          unbindBackdropEvents();\r\n          unbindKeyboardEvents();\r\n        };\r\n\r\n        function leaveAnimateCallback () {\r\n          scope.$emit(options.prefixEvent + '.hide', $modal);\r\n          if (angular.isDefined(options.onHide) && angular.isFunction(options.onHide)) {\r\n            options.onHide($modal);\r\n          }\r\n          if (findElement('.modal').length <= 0) {\r\n            bodyElement.removeClass(options.prefixClass + '-open');\r\n            layoutHideElement.attr('aria-hidden', 'false');\r\n          }\r\n          if (options.animation) {\r\n            bodyElement.removeClass(options.prefixClass + '-with-' + options.animation);\r\n          }\r\n        }\r\n\r\n        function findFocusableElements () {\r\n          // Add all elements we want to include in our selection\r\n          var focusableElements = 'a:not([disabled]), button:not([disabled]), input:not([disabled]), [tabindex]:not([disabled]):not([tabindex=\"-1\"])';\r\n          if (document.activeElement) {\r\n            var focusable = Array.prototype.filter.call(modalElement[0].querySelectorAll(focusableElements),\r\n              function (element) {\r\n                // Check for visibility while always include the current activeElement\r\n                return element.offsetWidth > 0 || element.offsetHeight > 0 || element === document.activeElement;\r\n              });\r\n\r\n            return focusable;\r\n          }\r\n        }\r\n\r\n        function findNextFocusableElement (inReverse) {\r\n          if (document.activeElement) {\r\n            var focusable = findFocusableElements();\r\n            if (focusable === undefined) return;\r\n            if (inReverse) {\r\n              focusable = Array.prototype.reverse.call(focusable);\r\n            }\r\n\r\n            var index = focusable.indexOf(document.activeElement);\r\n            return focusable[index + 1];\r\n          }\r\n        }\r\n\r\n        $modal.toggle = function () {\r\n          if ($modal.$isShown) {\r\n            $modal.hide();\r\n          } else {\r\n            $modal.show();\r\n          }\r\n        };\r\n\r\n        $modal.focus = function () {\r\n          modalElement[0].focus();\r\n        };\r\n\r\n        // Protected methods\r\n\r\n        $modal.$onKeyUp = function (evt) {\r\n\r\n          // Escape was pressed on an open modal. Hide it.  Backspace key, nothing happen.\r\n          if ((evt.which === 8 || evt.which === 27) && $modal.$isShown) {\r\n            if (evt.which === 27) {\r\n              $modal.hide();\r\n            }\r\n            evt.stopPropagation();\r\n          }\r\n        };\r\n\r\n        $modal.$onKeyDown = function (evt) {\r\n          if (options.keyboard) {\r\n            if (evt.keyCode === 8 && evt.target.tagName !== 'TEXTAREA' && evt.target.tagName !== 'INPUT') {\r\n              evt.preventDefault();\r\n            }\r\n\r\n            if (evt.keyCode === 9) {\r\n\r\n              var nextFocusable = findNextFocusableElement(evt.shiftKey);\r\n              if (nextFocusable === undefined) {\r\n                if (evt.preventDefault) evt.preventDefault();\r\n                if (evt.stopPropagation) evt.stopPropagation();\r\n\r\n                var focusable = findFocusableElements();\r\n                if (evt.shiftKey) {\r\n                  focusable[focusable.length - 1].focus();\r\n                } else {\r\n                  focusable[0].focus();\r\n                }\r\n              }\r\n            }\r\n          }\r\n        };\r\n\r\n        function bindBackdropEvents () {\r\n          if (options.backdrop) {\r\n            modalElement.on('click', hideOnBackdropClick);\r\n            backdropElement.on('click', hideOnBackdropClick);\r\n            backdropElement.on('wheel', preventEventDefault);\r\n          }\r\n        }\r\n\r\n        function unbindBackdropEvents () {\r\n          if (options.backdrop) {\r\n            modalElement.off('click', hideOnBackdropClick);\r\n            backdropElement.off('click', hideOnBackdropClick);\r\n            backdropElement.off('wheel', preventEventDefault);\r\n          }\r\n        }\r\n\r\n        function bindKeyboardEvents () {\r\n          if (options.keyboard) {\r\n            modalElement.on('keyup', $modal.$onKeyUp);\r\n            modalElement.on('keydown', $modal.$onKeyDown);\r\n          }\r\n        }\r\n\r\n        function unbindKeyboardEvents () {\r\n          if (options.keyboard) {\r\n            modalElement.off('keyup', $modal.$onKeyUp);\r\n            modalElement.off('keydown', $modal.$onKeyDown);\r\n          }\r\n        }\r\n\r\n        // Private helpers\r\n\r\n        function hideOnBackdropClick (evt) {\r\n          if (evt.target !== evt.currentTarget) return;\r\n          if (options.backdrop === 'static') {\r\n            $modal.focus();\r\n          } else {\r\n            $modal.hide();\r\n          }\r\n        }\r\n\r\n        function preventEventDefault (evt) {\r\n          evt.preventDefault();\r\n        }\r\n\r\n        function destroyModalElement () {\r\n          if ($modal.$isShown && modalElement !== null) {\r\n            // un-bind events\r\n            unbindBackdropEvents();\r\n            unbindKeyboardEvents();\r\n          }\r\n\r\n          if (modalScope) {\r\n            modalScope.$destroy();\r\n            modalScope = null;\r\n          }\r\n\r\n          if (modalElement) {\r\n            modalElement.remove();\r\n            modalElement = $modal.$element = null;\r\n          }\r\n        }\r\n\r\n        return $modal;\r\n\r\n      }\r\n\r\n      // Helper functions\r\n\r\n      function safeDigest (scope) {\r\n        /* eslint-disable no-unused-expressions */\r\n        scope.$$phase || (scope.$root && scope.$root.$$phase) || scope.$digest();\r\n        /* eslint-enable no-unused-expressions */\r\n      }\r\n\r\n      function findElement (query, element) {\r\n        return angular.element((element || document).querySelectorAll(query));\r\n      }\r\n\r\n      return ModalFactory;\r\n\r\n    };\r\n\r\n  })\r\n\r\n  .directive('bsModal', function ($window, $sce, $parse, $modal) {\r\n\r\n    return {\r\n      restrict: 'EAC',\r\n      scope: true,\r\n      link: function postLink (scope, element, attr, transclusion) {\r\n\r\n        // Directive options\r\n        var options = {\r\n          scope: scope,\r\n          element: element,\r\n          show: false\r\n        };\r\n        angular.forEach(['template', 'templateUrl', 'controller', 'controllerAs', 'contentTemplate', 'placement', 'backdrop', 'keyboard', 'html', 'container', 'animation', 'backdropAnimation', 'id', 'prefixEvent', 'prefixClass', 'customClass', 'modalClass', 'size', 'zIndex'], function (key) {\r\n          if (angular.isDefined(attr[key])) options[key] = attr[key];\r\n        });\r\n\r\n        // Options: alias modalClass to customClass\r\n        if (options.modalClass) {\r\n          options.customClass = options.modalClass;\r\n        }\r\n\r\n        // use string regex match boolean attr falsy values, leave truthy values be\r\n        var falseValueRegExp = /^(false|0|)$/i;\r\n        angular.forEach(['backdrop', 'keyboard', 'html', 'container'], function (key) {\r\n          if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) options[key] = false;\r\n        });\r\n\r\n        // bind functions from the attrs to the show and hide events\r\n        angular.forEach(['onBeforeShow', 'onShow', 'onBeforeHide', 'onHide'], function (key) {\r\n          var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\r\n          if (angular.isDefined(attr[bsKey])) {\r\n            options[key] = scope.$eval(attr[bsKey]);\r\n          }\r\n        });\r\n\r\n        // Support scope as data-attrs\r\n        angular.forEach(['title', 'content'], function (key) {\r\n          if (attr[key]) {\r\n            attr.$observe(key, function (newValue, oldValue) {\r\n              scope[key] = $sce.trustAsHtml(newValue);\r\n            });\r\n          }\r\n        });\r\n\r\n        // Support scope as an object\r\n        if (attr.bsModal) {\r\n          scope.$watch(attr.bsModal, function (newValue, oldValue) {\r\n            if (angular.isObject(newValue)) {\r\n              angular.extend(scope, newValue);\r\n            } else {\r\n              scope.content = newValue;\r\n            }\r\n          }, true);\r\n        }\r\n\r\n        // Initialize modal\r\n        var modal = $modal(options);\r\n\r\n        if (options.keyboard) {\r\n          modal.returnFocus = function () {\r\n            element[0].focus();\r\n          };\r\n        }\r\n\r\n        // Trigger\r\n        element.on(attr.trigger || 'click', modal.toggle);\r\n\r\n        // Garbage collection\r\n        scope.$on('$destroy', function () {\r\n          if (modal) modal.destroy();\r\n          options = null;\r\n          modal = null;\r\n        });\r\n\r\n      }\r\n    };\r\n\r\n  });\r\n"],"sourceRoot":"/source/"}