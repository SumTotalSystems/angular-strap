{"version":3,"sources":["modules/focus-out.js"],"names":["angular","module","callback","directive","$parse","$rootScope","restrict","$event","compile","$element","attr","fn","ngFocusOut","$$phase","element","scope","event","$on","off","$apply","on","ngEventHandler"],"mappings":"AAOA,YAEAA,SAAQC,OAMQC,wCAAWC,UAAA,cAAA,SAAA,aAAA,SAAAC,EAAAC,GALzB,OACEC,SAMYC,IALZC,QAAS,SAASC,EAAUC,GAC1B,GAAIC,GAAKP,EAAOM,EAAKE,WACrB,OAMM,UAAeC,EAASC,GAL5B,QAMMC,GAAiBb,GALrB,GAAIA,GAMK,WACLa,EAAAA,GALAR,OAAQS,IAYNC,GAAIJ,QAERC,EAAQI,WAAIhB,GARZa,EAAMI,OAAOjB,GAGjBY,EAAQM,GAAG,WAAYC,GACvBN,EAAME,IAAI,WAAY,WACpBH,EAAQI,IAAI,WAAYG","file":"modules/focus-out.min.js","sourcesContent":["'use strict';\r\n\r\nangular.module('mgcrea.ngStrap.helpers.ngFocusOut', [])\r\n  .directive('ngFocusOut', ['$parse', '$rootScope', function ($parse, $rootScope) {\r\n    return {\r\n      restrict: 'A',\r\n      compile: function ($element, attr) {\r\n        // NOTE:\r\n        // We expose the powerful `$event` object on the scope that provides access to the Window,\r\n        // etc. This is OK, because expressions are not sandboxed any more (and the expression\r\n        // sandbox was never meant to be a security feature anyway).\r\n        var fn = $parse(attr.ngFocusOut);\r\n\r\n        return function link (scope, element) {\r\n          function ngEventHandler (event) {\r\n            var callback = function () {\r\n              fn(scope, {\r\n                $event: event\r\n              });\r\n            };\r\n            if ($rootScope.$$phase) {\r\n              scope.$evalAsync(callback);\r\n            } else {\r\n              scope.$apply(callback);\r\n            }\r\n          }\r\n\r\n          // setup the handler\r\n          element.on('focusout', ngEventHandler);\r\n\r\n          scope.$on('$destroy', function () {\r\n            // tear down the handler\r\n            element.off('focusout', ngEventHandler);\r\n          });\r\n        };\r\n      }\r\n    };\r\n  }]);\r\n"],"sourceRoot":"/source/"}