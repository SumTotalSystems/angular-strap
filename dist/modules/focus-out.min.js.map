{"version":3,"sources":["modules/focus-out.js"],"names":["angular","module","callback","directive","$parse","$rootScope","restrict","$event","compile","$element","attr","fn","ngFocusOut","$$phase","element","scope","event","$on","off","$apply","on","ngEventHandler"],"mappings":"AAOA,YAEAA,SAAQC,OAMQC,wCAAWC,UAAA,cAAA,SAAA,aAAA,SAAAC,EAAAC,GALzB,OACEC,SAMYC,IALZC,QAAS,SAASC,EAAUC,GAC1B,GAAIC,GAAKP,EAAOM,EAAKE,WACrB,OAMM,UAAeC,EAASC,GAL5B,QAMMC,GAAiBb,GALrB,GAAIA,GAMK,WACLa,EAAAA,GALAR,OAAQS,IAYNC,GAAIJ,QAERC,EAAQI,WAAIhB,GARZa,EAAMI,OAAOjB,GAGjBY,EAAQM,GAAG,WAAYC,GACvBN,EAAME,IAAI,WAAY,WACpBH,EAAQI,IAAI,WAAYG","file":"modules/focus-out.min.js","sourcesContent":["'use strict';\n\nangular.module('mgcrea.ngStrap.helpers.ngFocusOut', [])\n  .directive('ngFocusOut', ['$parse', '$rootScope', function ($parse, $rootScope) {\n    return {\n      restrict: 'A',\n      compile: function ($element, attr) {\n        // NOTE:\n        // We expose the powerful `$event` object on the scope that provides access to the Window,\n        // etc. This is OK, because expressions are not sandboxed any more (and the expression\n        // sandbox was never meant to be a security feature anyway).\n        var fn = $parse(attr.ngFocusOut);\n\n        return function link (scope, element) {\n          function ngEventHandler (event) {\n            var callback = function () {\n              fn(scope, {\n                $event: event\n              });\n            };\n            if ($rootScope.$$phase) {\n              scope.$evalAsync(callback);\n            } else {\n              scope.$apply(callback);\n            }\n          }\n\n          // setup the handler\n          element.on('focusout', ngEventHandler);\n\n          scope.$on('$destroy', function () {\n            // tear down the handler\n            element.off('focusout', ngEventHandler);\n          });\n        };\n      }\n    };\n  }]);\n"],"sourceRoot":"/source/"}