{"version":3,"sources":["modules/date-formatter.js"],"names":["angular","weekdaysShort","lang","splitTimeFormat","timeFormat","exec","format","slice","this","getDefaultLocale","DATETIME_FORMATS","$locale","id","getDatetimeFormat","DAY","SHORTDAY","weekdays","hoursFormat","minutesFormat","secondsFormat","timeSeparator","showSeconds","dateFilter","showAM","formatDate","date","timezone"],"mappings":"AAOA,YAEAA,SAYSC,OAAAA,2CAA0BC,QAAAA,kBAAAA,UAAAA,aAAAA,SAAAA,EAAAA,GACjC,QAkBWC,GAAgBC,GAjBzB,MAAO,wCAAwCC,KAAKC,GAAQC,MAAM,GAbpEC,KAYIC,iBAAeC,WAXjB,MAAOC,GAAQC,IAEjBJ,KAaIK,kBAAeH,SAAiBI,EAAAA,GAZlC,MAAOH,GAAQD,iBAAiBJ,IAAWA,GAE7CE,KAcIP,cAAO,SAAAC,GAbT,MAAOS,GAAQD,iBAAiBK,UAElCP,KAgBIQ,SAAOb,SAAgBC,GAfzB,MAAOO,GAAQD,iBAAiBI,KAKlCN,KAoBIS,YAAOd,SAAgBC,GAnBzB,MAAOD,GAAgBC,GAAY,IAErCI,KAsBIU,cAAOf,SAAgBC,GArBzB,MAAOD,GAAgBC,GAAY,IAErCI,KAwBIW,cAAShB,SAAgBC,GAvB3B,MAAOD,GAAgBC,GAAY,IAErCI,KA0BIY,cAASjB,SAAgBC,GAzB3B,MAAOD,GAAgBC,GAAY,IAErCI,KA2BIa,YAAOC,SAAiBhB,GA1B1B,QAASH,EAAgBC,GAAY,IAEvCI,KAAKe,OAAS,SAASnB,GACrB,QAASD,EAAgBC,GAAY,IAEvCI,KAAKgB,WAAa,SAASC,EAAMnB,EAAQJ,EAAMwB,GAC7C,MAAOJ,GAAWG,EAAMnB,EAAQoB","file":"modules/date-formatter.min.js","sourcesContent":["'use strict';\n\nangular.module('mgcrea.ngStrap.helpers.dateFormatter', [])\n\n  .service('$dateFormatter', function ($locale, dateFilter) {\n\n    // The unused `lang` arguments are on purpose. The default implementation does not\n    // use them and it always uses the locale loaded into the `$locale` service.\n    // Custom implementations might use it, thus allowing different directives to\n    // have different languages.\n\n    this.getDefaultLocale = function () {\n      return $locale.id;\n    };\n\n    // Format is either a data format name, e.g. \"shortTime\" or \"fullDate\", or a date format\n    // Return either the corresponding date format or the given date format.\n    this.getDatetimeFormat = function (format, lang) {\n      return $locale.DATETIME_FORMATS[format] || format;\n    };\n\n    this.weekdaysShort = function (lang) {\n      return $locale.DATETIME_FORMATS.SHORTDAY;\n    };\n\n    this.weekdays = function (lang) {\n      return $locale.DATETIME_FORMATS.DAY;\n    };\n\n    function splitTimeFormat (format) {\n      return /(h+)([:\\.])?(m+)([:\\.])?(s*)[ ]?(a?)/i.exec(format).slice(1);\n    }\n\n    // h:mm a => h\n    this.hoursFormat = function (timeFormat) {\n      return splitTimeFormat(timeFormat)[0];\n    };\n\n    // h:mm a => mm\n    this.minutesFormat = function (timeFormat) {\n      return splitTimeFormat(timeFormat)[2];\n    };\n\n    // h:mm:ss a => ss\n    this.secondsFormat = function (timeFormat) {\n      return splitTimeFormat(timeFormat)[4];\n    };\n\n    // h:mm a => :\n    this.timeSeparator = function (timeFormat) {\n      return splitTimeFormat(timeFormat)[1];\n    };\n\n    // h:mm:ss a => true, h:mm a => false\n    this.showSeconds = function (timeFormat) {\n      return !!splitTimeFormat(timeFormat)[4];\n    };\n\n    // h:mm a => true, H.mm => false\n    this.showAM = function (timeFormat) {\n      return !!splitTimeFormat(timeFormat)[5];\n    };\n\n    this.formatDate = function (date, format, lang, timezone) {\n      return dateFilter(date, format, timezone);\n    };\n\n  });\n"],"sourceRoot":"/source/"}