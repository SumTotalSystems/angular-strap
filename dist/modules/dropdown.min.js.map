{"version":3,"sources":["modules/dropdown.js"],"names":["angular","trigger","provider","container","this","defaults","keyboard","html","delay","placement","bodyEl","matchesSelector","DropdownFactory","$dropdown","options","element","config","onBodyClick","evt","directive","target","hide","extend","$onKeyDown","scope","keyCode","parent","tagName","toUpperCase","attr","$element","focus","stopPropagation","items","length","test","forEach","i","el","index","$","querySelectorAll","eq","click","call","$onFocusOut","inMenu","relatedTarget","undefined","$window","document","body","show","$timeout","value","$scope","parentEl","hasClass","addClass","$id","key","off","returnFocus","removeClass","destroy","prototype","webkitMatchesSelector","Element","mozMatchesSelector","msMatchesSelector","oMatchesSelector","tAttrs","nextSibling","nodeType","$sce","restrict","compile","template","templateUrl","parentNode","removeChild","falseValueRegExp","bsKey","isDefined","charAt","slice","$watch","newValue","oldValue","content","$eval","dropdown","bsShow","keydown","isString","match","$on"],"mappings":"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","file":"modules/dropdown.min.js","sourcesContent":["'use strict';\r\n\r\nangular.module('mgcrea.ngStrap.dropdown', ['mgcrea.ngStrap.tooltip'])\r\n\r\n  .provider('$dropdown', function () {\r\n\r\n    var defaults = this.defaults = {\r\n      animation: 'am-fade',\r\n      prefixClass: 'dropdown',\r\n      prefixEvent: 'dropdown',\r\n      placement: 'bottom-left',\r\n      templateUrl: 'dropdown/dropdown.tpl.html',\r\n      trigger: 'click',\r\n      container: false,\r\n      keyboard: true,\r\n      html: false,\r\n      delay: 0\r\n    };\r\n\r\n    this.$get = function ($window, $rootScope, $tooltip, $timeout) {\r\n\r\n      var bodyEl = angular.element($window.document.body);\r\n      var matchesSelector = Element.prototype.matchesSelector || Element.prototype.webkitMatchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector || Element.prototype.oMatchesSelector;\r\n\r\n      function DropdownFactory (element, config) {\r\n\r\n        var $dropdown = {};\r\n\r\n        // Common vars\r\n        var options = angular.extend({}, defaults, config);\r\n        /* var scope = */\r\n        $dropdown.$scope = options.scope && options.scope.$new() || $rootScope.$new();\r\n\r\n        $dropdown = $tooltip(element, options);\r\n        var parentEl = element.parent();\r\n\r\n        if (element && element[0] && element[0].tagName.toUpperCase() === 'BUTTON') {\r\n          element.attr('aria-haspopup', 'true');\r\n          element.attr('aria-expanded', 'false');\r\n        }\r\n\r\n        // Protected methods\r\n\r\n        $dropdown.$onKeyDown = function (evt) {          \r\n          if (evt.keyCode === 9 || evt.keyCode === 27) {            \r\n            $dropdown.hide(/27/.test(evt.keyCode));\r\n            return;\r\n          }\r\n          else if ($dropdown.$element && (evt.keyCode === 38 || evt.keyCode === 40 || evt.keyCode === 32 || evt.keyCode === 13)) {\r\n            $dropdown.$element.focus();\r\n\r\n            evt.preventDefault();\r\n            evt.stopPropagation();\r\n  \r\n            // Retrieve active index\r\n            var items = angular.element($dropdown.$element[0].querySelectorAll('li:not(.divider) a'));\r\n            if (!items.length) return;\r\n            var index;\r\n            angular.forEach(items, function (el, i) {            \r\n              if (matchesSelector && matchesSelector.call(el, '.active')) {\r\n                index = i;              \r\n                $(el).removeClass('active');\r\n              }\r\n            });\r\n\r\n            // Navigate with keyboard\r\n            if (evt.keyCode === 32 || evt.keyCode === 13) {\r\n              items.eq(index).click();\r\n            } \r\n            else if (evt.keyCode === 38 && index > 0) index--;\r\n            else if (evt.keyCode === 38 && (angular.isUndefined(index) || index == 0)) index = items.length - 1;\r\n            else if (evt.keyCode === 40 && index < items.length - 1) index++;\r\n            else if (evt.keyCode === 40 && index === items.length - 1) index = 0;\r\n            else if (angular.isUndefined(index)) index = 0;\r\n            items.eq(index).addClass('active');\r\n            $dropdown.$element.attr('aria-activedescendant', items.eq(index).attr('id'));\r\n          }         \r\n        };\r\n\r\n        $dropdown.$onFocusOut = function (evt) {\r\n          // find out if the related target's parents contain the datepicker's $element\r\n          var inMenu = false;\r\n          var parent = angular.element(evt.relatedTarget);\r\n          while (parent !== undefined && parent.length && parent[0] !== $window.document.body) {\r\n            parent = parent.parent();\r\n            if (parent !== undefined && parent[0] === $dropdown.$element[0]) {\r\n              inMenu = true;\r\n              break;\r\n            } else {\r\n              inMenu = false;\r\n            }\r\n          }\r\n\r\n          if (!inMenu) {\r\n            $dropdown.hide();\r\n          } else {\r\n            evt.preventDefault();\r\n            evt.stopPropagation();\r\n          }\r\n        };\r\n\r\n        // Overrides\r\n\r\n        var show = $dropdown.show;\r\n        $dropdown.show = function () {\r\n          show();\r\n          // use timeout to hookup the events to prevent\r\n          // event bubbling from being processed imediately.\r\n          $timeout(function () {\r\n            // Set assistive technology properties\r\n            element.attr('aria-expanded', 'true');\r\n            if ($dropdown.$element) {\r\n              $dropdown.$element.attr('aria-activedescendant', '');\r\n              $dropdown.$element.attr('role', 'menu');\r\n              $dropdown.$element.attr('tabindex', '-1');                            \r\n            }\r\n            if (options.keyboard && $dropdown.$element) {\r\n              $dropdown.$element.on('keydown', $dropdown.$onKeyDown);\r\n              $dropdown.$element.on('focusout', $dropdown.$onFocusOut);\r\n            }\r\n\r\n            bodyEl.on('click', onBodyClick);\r\n\r\n            if ($dropdown.$element) {\r\n              var items = angular.element($dropdown.$element[0].querySelectorAll('li:not(.divider)'));\r\n              // <li> should have role=\"none\" as per SS-9603\r\n              items.attr('role', 'none');\r\n\r\n              angular.element($dropdown.$element[0].querySelectorAll('li.divider')).attr('role', 'seperator');\r\n\r\n              items = angular.element($dropdown.$element[0].querySelectorAll('li:not(.divider) a'));\r\n              items.attr('role', 'menuitem');              \r\n              if (items.length && options.keyboard) {\r\n                // Dropdown menu items that are natively focusable need to have a tabindex of -1 per SS-9603\r\n                // Menu item ID's should be unique for aria-activedescendant\r\n                angular.forEach(items, function (value, key) {\r\n                  angular.element(value).attr('id', $dropdown.$scope.$id + '_menuitem_' + key);\r\n                  angular.element(value).attr('tabindex', '-1');\r\n                });\r\n              }\r\n            }\r\n          }, 0, false);\r\n          if (parentEl.hasClass('dropdown')) parentEl.addClass('open');\r\n        };\r\n\r\n        var hide = $dropdown.hide;\r\n        $dropdown.hide = function (returnFocus) {\r\n          if (!$dropdown.$isShown) return;\r\n\r\n          element.attr('aria-expanded', 'false');\r\n\r\n          if (options.keyboard && $dropdown.$element) {\r\n            $dropdown.$element.off('keydown', $dropdown.$onKeyDown);\r\n            $dropdown.$element.off('focusout', $dropdown.$onFocusOut);\r\n          }\r\n\r\n          bodyEl.off('click', onBodyClick);\r\n          if (parentEl.hasClass('dropdown')) parentEl.removeClass('open');\r\n          $timeout(function () {\r\n            hide();\r\n            if (returnFocus) {\r\n              $timeout(function () {\r\n                if (element && element[0]) {\r\n                  element[0].focus();\r\n                }\r\n              }, 0, false);\r\n            }\r\n          }, 200);\r\n        };\r\n\r\n        var destroy = $dropdown.destroy;\r\n        $dropdown.destroy = function () {\r\n          bodyEl.off('click', onBodyClick);\r\n          destroy();\r\n        };\r\n\r\n        // Private functions\r\n\r\n        function onBodyClick (evt) {\r\n          if (evt.target === element[0]) return undefined;\r\n          return evt.target !== element[0] && $dropdown.hide();\r\n        }\r\n\r\n        return $dropdown;\r\n\r\n      }\r\n\r\n      return DropdownFactory;\r\n\r\n    };\r\n\r\n  })\r\n\r\n  .directive('bsDropdown', function ($window, $sce, $dropdown) {\r\n\r\n    return {\r\n      restrict: 'EAC',\r\n      scope: true,\r\n      compile: function (tElement, tAttrs) {\r\n\r\n        // Support for inlined template (next sibling)\r\n        // It must be fetched before compilation\r\n        if (!tAttrs.bsDropdown) {\r\n          var nextSibling = tElement[0].nextSibling;\r\n          while (nextSibling && nextSibling.nodeType !== 1) {\r\n            nextSibling = nextSibling.nextSibling;\r\n          }\r\n          if (nextSibling && nextSibling.className.split(' ').indexOf('dropdown-menu') >= 0) {\r\n            tAttrs.template = nextSibling.outerHTML;\r\n            tAttrs.templateUrl = undefined;\r\n            nextSibling.parentNode.removeChild(nextSibling);\r\n          }\r\n        }\r\n\r\n        return function postLink (scope, element, attr) {\r\n\r\n          // Directive options\r\n          var options = {\r\n            scope: scope\r\n          };\r\n          angular.forEach(['template', 'templateUrl', 'controller', 'controllerAs', 'placement', 'container', 'delay', 'trigger', 'keyboard', 'html', 'animation', 'id', 'autoClose'], function (key) {\r\n            if (angular.isDefined(tAttrs[key])) options[key] = tAttrs[key];\r\n          });\r\n\r\n          // use string regex match boolean attr falsy values, leave truthy values be\r\n          var falseValueRegExp = /^(false|0|)$/i;\r\n          angular.forEach(['html', 'container'], function (key) {\r\n            if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) options[key] = false;\r\n          });\r\n\r\n          // bind functions from the attrs to the show and hide events\r\n          angular.forEach(['onBeforeShow', 'onShow', 'onBeforeHide', 'onHide'], function (key) {\r\n            var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\r\n            if (angular.isDefined(attr[bsKey])) {\r\n              options[key] = scope.$eval(attr[bsKey]);\r\n            }\r\n          });\r\n\r\n          // Support scope as an object\r\n          if (attr.bsDropdown) {\r\n            scope.$watch(attr.bsDropdown, function (newValue, oldValue) {\r\n              scope.content = newValue;\r\n            }, true);\r\n          }\r\n\r\n          // Initialize dropdown\r\n          var dropdown = $dropdown(element, options);\r\n\r\n          // Pickup key press on the dropdown button\r\n          element.keydown(function(evt) {\r\n            if(evt.keyCode === 38 || evt.keyCode === 40 || evt.keyCode === 27 || evt.keyCode === 9) {\r\n              dropdown.$onKeyDown(evt);\r\n            }\r\n          })\r\n\r\n          // Visibility binding support\r\n          if (attr.bsShow) {\r\n            scope.$watch(attr.bsShow, function (newValue, oldValue) {\r\n              if (!dropdown || !angular.isDefined(newValue)) return;\r\n              if (angular.isString(newValue)) newValue = !!newValue.match(/true|,?(dropdown),?/i);\r\n              if (newValue === true) {\r\n                dropdown.show();\r\n              } else {\r\n                dropdown.hide();\r\n              }\r\n            });\r\n          }\r\n\r\n          // Garbage collection\r\n          scope.$on('$destroy', function () {\r\n            if (dropdown) dropdown.destroy();\r\n            options = null;\r\n            dropdown = null;\r\n          });\r\n\r\n        };\r\n      }\r\n    };\r\n\r\n  });\r\n"],"sourceRoot":"/source/"}