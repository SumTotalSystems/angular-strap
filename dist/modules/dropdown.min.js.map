{"version":3,"sources":["modules/dropdown.js"],"names":["angular","trigger","provider","container","this","defaults","keyboard","html","delay","placement","bodyEl","matchesSelector","DropdownFactory","$dropdown","options","element","config","onBodyClick","evt","directive","target","hide","attr","extend","$scope","scope","$new","$rootScope","keydown","parentEl","test","keyCode","preventDefault","stopPropagation","items","eq","focus","$onKeyDown","$element","querySelectorAll","length","index","inMenu","el","i","parent","relatedTarget","undefined","$onFocusOut","$window","document","body","show","$timeout","forEach","value","hasClass","key","addClass","returnFocus","$isShown","off","removeClass","destroy","prototype","toUpperCase","webkitMatchesSelector","Element","mozMatchesSelector","msMatchesSelector","oMatchesSelector","tAttrs","nextSibling","nodeType","$sce","restrict","compile","template","templateUrl","parentNode","removeChild","falseValueRegExp","bsKey","isDefined","charAt","slice","$watch","newValue","oldValue","content","$eval","dropdown","isString","bsShow","match","$on"],"mappings":"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","file":"modules/dropdown.min.js","sourcesContent":["'use strict';\r\n\r\nangular.module('mgcrea.ngStrap.dropdown', ['mgcrea.ngStrap.tooltip'])\r\n\r\n  .provider('$dropdown', function () {\r\n\r\n    var defaults = this.defaults = {\r\n      animation: 'am-fade',\r\n      prefixClass: 'dropdown',\r\n      prefixEvent: 'dropdown',\r\n      placement: 'bottom-left',\r\n      templateUrl: 'dropdown/dropdown.tpl.html',\r\n      trigger: 'click',\r\n      container: false,\r\n      keyboard: true,\r\n      html: false,\r\n      delay: 0\r\n    };\r\n\r\n    this.$get = function ($window, $rootScope, $tooltip, $timeout) {\r\n\r\n      var bodyEl = angular.element($window.document.body);\r\n      var matchesSelector = Element.prototype.matchesSelector || Element.prototype.webkitMatchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector || Element.prototype.oMatchesSelector;\r\n\r\n      function DropdownFactory (element, config) {\r\n\r\n        var $dropdown = {};\r\n\r\n        // Common vars\r\n        var options = angular.extend({}, defaults, config);\r\n        /* var scope = */\r\n        $dropdown.$scope = options.scope && options.scope.$new() || $rootScope.$new();\r\n\r\n        $dropdown = $tooltip(element, options);\r\n        var parentEl = element.parent();\r\n\r\n        if (element && element[0] && element[0].tagName.toUpperCase() === 'BUTTON') {\r\n          element.attr('aria-haspopup', 'true');\r\n          element.attr('data-toggle', 'dropdown');\r\n          element.attr('aria-expanded', 'false');\r\n          // element.attr('role', 'button'); As the element is a <button> there is no need for this attribute\r\n        }\r\n\r\n        // Dropdown menu items that are natively focusable need a tabindex of -1, but the user still needs to tab into the drodpwn menu\r\n        // This event serves to enable the user to tab into the drodpown menu\r\n        element.keydown(function (evt) {\r\n          if (/(9)/.test(evt.keyCode)) {\r\n            evt.preventDefault();\r\n            evt.stopPropagation();\r\n            var items = angular.element($dropdown.$element[0].querySelectorAll('li:not(.divider) a'));\r\n            items.eq(0)[0].focus();\r\n          }\r\n        });\r\n\r\n        // Protected methods\r\n\r\n        $dropdown.$onKeyDown = function (evt) {\r\n          if ((/(9)/.test(evt.keyCode) && !options.keyboard) || /27/.test(evt.keyCode)) {\r\n            $dropdown.hide(/27/.test(evt.keyCode));\r\n            return;\r\n          }\r\n          if (!/(38|40)/.test(evt.keyCode)) return;\r\n          evt.preventDefault();\r\n          evt.stopPropagation();\r\n\r\n          // Retrieve focused index\r\n          var items = angular.element($dropdown.$element[0].querySelectorAll('li:not(.divider) a'));\r\n          if (!items.length) return;\r\n          var index;\r\n          angular.forEach(items, function (el, i) {\r\n            if (matchesSelector && matchesSelector.call(el, ':focus')) index = i;\r\n          });\r\n\r\n          // Navigate with keyboard\r\n          if (evt.keyCode === 38 && index > 0) index--;\r\n          else if (evt.keyCode === 40 && index < items.length - 1) index++;\r\n          else if (evt.keyCode === 40 && index === items.length - 1) index = 0;\r\n          else if (angular.isUndefined(index)) index = 0;\r\n          items.eq(index)[0].focus();\r\n\r\n        };\r\n\r\n        $dropdown.$onFocusOut = function (evt) {\r\n          // find out if the related target's parents contain the datepicker's $element\r\n          var inMenu = false;\r\n          var parent = angular.element(evt.relatedTarget);\r\n          while (parent !== undefined && parent.length && parent[0] !== $window.document.body) {\r\n            parent = parent.parent();\r\n            if (parent !== undefined && parent[0] === $dropdown.$element[0]) {\r\n              inMenu = true;\r\n              break;\r\n            } else {\r\n              inMenu = false;\r\n            }\r\n          }\r\n\r\n          if (!inMenu) {\r\n            $dropdown.hide();\r\n          } else {\r\n            evt.preventDefault();\r\n            evt.stopPropagation();\r\n          }\r\n        };\r\n\r\n        // Overrides\r\n\r\n        var show = $dropdown.show;\r\n        $dropdown.show = function () {\r\n          show();\r\n          // use timeout to hookup the events to prevent\r\n          // event bubbling from being processed imediately.\r\n          $timeout(function () {\r\n            // Set assistive technology properties\r\n            element.attr('aria-expanded', 'true');\r\n            if ($dropdown.$element) {\r\n              $dropdown.$element.attr('aria-hidden', 'false');\r\n              $dropdown.$element.attr('role', 'menu');\r\n              // $dropdown.$element.attr('tabindex', '-1'); <ul> element should have no tabindex per SS-9603\r\n            }\r\n            if (options.keyboard && $dropdown.$element) {\r\n              $dropdown.$element.on('keydown', $dropdown.$onKeyDown);\r\n              $dropdown.$element.on('focusout', $dropdown.$onFocusOut);\r\n            }\r\n\r\n            bodyEl.on('click', onBodyClick);\r\n\r\n            if ($dropdown.$element) {\r\n              var items = angular.element($dropdown.$element[0].querySelectorAll('li:not(.divider)'));\r\n              // <li> should have role=\"none\" as per SS-9603\r\n              items.attr('role', 'none');\r\n\r\n              angular.element($dropdown.$element[0].querySelectorAll('li.divider')).attr('role', 'seperator');\r\n\r\n              items = angular.element($dropdown.$element[0].querySelectorAll('li:not(.divider) a'));\r\n              items.attr('role', 'menuitem');\r\n              if (items.length && options.keyboard) {\r\n                // items[0].focus(); Removing initial focus as user must tab into the menu per SS-9603\r\n\r\n                // Dropdown menu items that are natively focusable need to have a tabindex of -1 per SS-9603\r\n                angular.forEach(items, function (value, key) {\r\n                  angular.element(value).attr('tabindex', '-1');\r\n                });\r\n              }\r\n            }\r\n          }, 0, false);\r\n          if (parentEl.hasClass('dropdown')) parentEl.addClass('open');\r\n        };\r\n\r\n        var hide = $dropdown.hide;\r\n        $dropdown.hide = function (returnFocus) {\r\n          if (!$dropdown.$isShown) return;\r\n\r\n          element.attr('aria-expanded', 'false');\r\n          $dropdown.$element.attr('aria-hidden', 'true');\r\n\r\n          if (options.keyboard && $dropdown.$element) {\r\n            $dropdown.$element.off('keydown', $dropdown.$onKeyDown);\r\n            $dropdown.$element.off('focusout', $dropdown.$onFocusOut);\r\n          }\r\n\r\n          bodyEl.off('click', onBodyClick);\r\n          if (parentEl.hasClass('dropdown')) parentEl.removeClass('open');\r\n          $timeout(function () {\r\n            hide();\r\n            if (returnFocus) {\r\n              $timeout(function () {\r\n                if (element && element[0]) {\r\n                  element[0].focus();\r\n                }\r\n              }, 0, false);\r\n            }\r\n          }, 200);\r\n        };\r\n\r\n        var destroy = $dropdown.destroy;\r\n        $dropdown.destroy = function () {\r\n          bodyEl.off('click', onBodyClick);\r\n          destroy();\r\n        };\r\n\r\n        // Private functions\r\n\r\n        function onBodyClick (evt) {\r\n          if (evt.target === element[0]) return undefined;\r\n          return evt.target !== element[0] && $dropdown.hide();\r\n        }\r\n\r\n        return $dropdown;\r\n\r\n      }\r\n\r\n      return DropdownFactory;\r\n\r\n    };\r\n\r\n  })\r\n\r\n  .directive('bsDropdown', function ($window, $sce, $dropdown) {\r\n\r\n    return {\r\n      restrict: 'EAC',\r\n      scope: true,\r\n      compile: function (tElement, tAttrs) {\r\n\r\n        // Support for inlined template (next sibling)\r\n        // It must be fetched before compilation\r\n        if (!tAttrs.bsDropdown) {\r\n          var nextSibling = tElement[0].nextSibling;\r\n          while (nextSibling && nextSibling.nodeType !== 1) {\r\n            nextSibling = nextSibling.nextSibling;\r\n          }\r\n          if (nextSibling && nextSibling.className.split(' ').indexOf('dropdown-menu') >= 0) {\r\n            tAttrs.template = nextSibling.outerHTML;\r\n            tAttrs.templateUrl = undefined;\r\n            nextSibling.parentNode.removeChild(nextSibling);\r\n          }\r\n        }\r\n\r\n        return function postLink (scope, element, attr) {\r\n\r\n          // Directive options\r\n          var options = {\r\n            scope: scope\r\n          };\r\n          angular.forEach(['template', 'templateUrl', 'controller', 'controllerAs', 'placement', 'container', 'delay', 'trigger', 'keyboard', 'html', 'animation', 'id', 'autoClose'], function (key) {\r\n            if (angular.isDefined(tAttrs[key])) options[key] = tAttrs[key];\r\n          });\r\n\r\n          // use string regex match boolean attr falsy values, leave truthy values be\r\n          var falseValueRegExp = /^(false|0|)$/i;\r\n          angular.forEach(['html', 'container'], function (key) {\r\n            if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) options[key] = false;\r\n          });\r\n\r\n          // bind functions from the attrs to the show and hide events\r\n          angular.forEach(['onBeforeShow', 'onShow', 'onBeforeHide', 'onHide'], function (key) {\r\n            var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\r\n            if (angular.isDefined(attr[bsKey])) {\r\n              options[key] = scope.$eval(attr[bsKey]);\r\n            }\r\n          });\r\n\r\n          // Support scope as an object\r\n          if (attr.bsDropdown) {\r\n            scope.$watch(attr.bsDropdown, function (newValue, oldValue) {\r\n              scope.content = newValue;\r\n            }, true);\r\n          }\r\n\r\n          // Initialize dropdown\r\n          var dropdown = $dropdown(element, options);\r\n\r\n          // Visibility binding support\r\n          if (attr.bsShow) {\r\n            scope.$watch(attr.bsShow, function (newValue, oldValue) {\r\n              if (!dropdown || !angular.isDefined(newValue)) return;\r\n              if (angular.isString(newValue)) newValue = !!newValue.match(/true|,?(dropdown),?/i);\r\n              if (newValue === true) {\r\n                dropdown.show();\r\n              } else {\r\n                dropdown.hide();\r\n              }\r\n            });\r\n          }\r\n\r\n          // Garbage collection\r\n          scope.$on('$destroy', function () {\r\n            if (dropdown) dropdown.destroy();\r\n            options = null;\r\n            dropdown = null;\r\n          });\r\n\r\n        };\r\n      }\r\n    };\r\n\r\n  });\r\n"],"sourceRoot":"/source/"}