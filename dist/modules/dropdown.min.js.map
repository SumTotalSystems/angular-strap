{"version":3,"sources":["modules/dropdown.js"],"names":["angular","trigger","provider","container","this","defaults","keyboard","html","delay","placement","bodyEl","matchesSelector","DropdownFactory","$dropdown","options","element","config","onBodyClick","evt","directive","target","hide","attr","extend","scope","$new","$rootScope","$tooltip","$onKeyDown","parent","test","keyCode","stopPropagation","items","$element","querySelectorAll","length","preventDefault","index","focus","inMenu","el","i","relatedTarget","undefined","$onFocusOut","$window","document","body","show","$timeout","parentEl","hasClass","addClass","returnFocus","$isShown","off","removeClass","destroy","prototype","toUpperCase","webkitMatchesSelector","Element","mozMatchesSelector","msMatchesSelector","oMatchesSelector","tAttrs","nextSibling","nodeType","$sce","restrict","compile","template","templateUrl","parentNode","removeChild","forEach","falseValueRegExp","key","bsKey","isDefined","charAt","slice","$watch","newValue","oldValue","content","$eval","dropdown","isString","bsShow","match","$on"],"mappings":"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","file":"modules/dropdown.min.js","sourcesContent":["'use strict';\r\n\r\nangular.module('mgcrea.ngStrap.dropdown', ['mgcrea.ngStrap.tooltip'])\r\n\r\n  .provider('$dropdown', function () {\r\n\r\n    var defaults = this.defaults = {\r\n      animation: 'am-fade',\r\n      prefixClass: 'dropdown',\r\n      prefixEvent: 'dropdown',\r\n      placement: 'bottom-left',\r\n      templateUrl: 'dropdown/dropdown.tpl.html',\r\n      trigger: 'click',\r\n      container: false,\r\n      keyboard: true,\r\n      html: false,\r\n      delay: 0\r\n    };\r\n\r\n    this.$get = function ($window, $rootScope, $tooltip, $timeout) {\r\n\r\n      var bodyEl = angular.element($window.document.body);\r\n      var matchesSelector = Element.prototype.matchesSelector || Element.prototype.webkitMatchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector || Element.prototype.oMatchesSelector;\r\n\r\n      function DropdownFactory (element, config) {\r\n\r\n        var $dropdown = {};\r\n\r\n        // Common vars\r\n        var options = angular.extend({}, defaults, config);\r\n        /* var scope = */\r\n        $dropdown.$scope = options.scope && options.scope.$new() || $rootScope.$new();\r\n\r\n        $dropdown = $tooltip(element, options);\r\n        var parentEl = element.parent();\r\n\r\n        if (element && element[0] && element[0].tagName.toUpperCase() === 'BUTTON') {\r\n          element.attr('aria-haspopup', 'true');\r\n          element.attr('data-toggle', 'dropdown');\r\n          element.attr('aria-expanded', 'false');\r\n          element.attr('role', 'button');\r\n        }\r\n\r\n        // Protected methods\r\n\r\n        $dropdown.$onKeyDown = function (evt) {\r\n          if ((/(9)/.test(evt.keyCode) && !options.keyboard) || /27/.test(evt.keyCode)) {\r\n            $dropdown.hide(/27/.test(evt.keyCode));\r\n            return;\r\n          }\r\n          if (!/(38|40)/.test(evt.keyCode)) return;\r\n          evt.preventDefault();\r\n          evt.stopPropagation();\r\n\r\n          // Retrieve focused index\r\n          var items = angular.element($dropdown.$element[0].querySelectorAll('li:not(.divider) a'));\r\n          if (!items.length) return;\r\n          var index;\r\n          angular.forEach(items, function (el, i) {\r\n            if (matchesSelector && matchesSelector.call(el, ':focus')) index = i;\r\n          });\r\n\r\n          // Navigate with keyboard\r\n          if (evt.keyCode === 38 && index > 0) index--;\r\n          else if (evt.keyCode === 40 && index < items.length - 1) index++;\r\n          else if (angular.isUndefined(index)) index = 0;\r\n          items.eq(index)[0].focus();\r\n\r\n        };\r\n\r\n        $dropdown.$onFocusOut = function (evt) {\r\n          // find out if the related target's parents contain the datepicker's $element\r\n          var inMenu = false;\r\n          var parent = angular.element(evt.relatedTarget);\r\n          while (parent !== undefined && parent.length && parent[0] !== $window.document.body) {\r\n            parent = parent.parent();\r\n            if (parent !== undefined && parent[0] === $dropdown.$element[0]) {\r\n              inMenu = true;\r\n              break;\r\n            } else {\r\n              inMenu = false;\r\n            }\r\n          }\r\n\r\n          if (!inMenu) {\r\n            $dropdown.hide();\r\n          } else {\r\n            evt.preventDefault();\r\n            evt.stopPropagation();\r\n          }\r\n        };\r\n\r\n        // Overrides\r\n\r\n        var show = $dropdown.show;\r\n        $dropdown.show = function () {\r\n          show();\r\n          // use timeout to hookup the events to prevent\r\n          // event bubbling from being processed imediately.\r\n          $timeout(function () {\r\n            // Set assistive technology properties\r\n            element.attr('aria-expanded', 'true');\r\n            if ($dropdown.$element) {\r\n              $dropdown.$element.attr('aria-hidden', 'false');\r\n              $dropdown.$element.attr('role', 'menu');\r\n              $dropdown.$element.attr('tabindex', '-1');\r\n            }\r\n            if (options.keyboard && $dropdown.$element) {\r\n              $dropdown.$element.on('keydown', $dropdown.$onKeyDown);\r\n              $dropdown.$element.on('focusout', $dropdown.$onFocusOut);\r\n            }\r\n\r\n            bodyEl.on('click', onBodyClick);\r\n\r\n            if ($dropdown.$element) {\r\n              var items = angular.element($dropdown.$element[0].querySelectorAll('li:not(.divider)'));\r\n              items.attr('role', 'presentation');\r\n\r\n              angular.element($dropdown.$element[0].querySelectorAll('li.divider')).attr('role', 'seperator');\r\n\r\n              items = angular.element($dropdown.$element[0].querySelectorAll('li:not(.divider) a'));\r\n              items.attr('role', 'menuitem');\r\n              if (items.length && options.keyboard) {\r\n                items[0].focus();\r\n              }\r\n            }\r\n          }, 0, false);\r\n          if (parentEl.hasClass('dropdown')) parentEl.addClass('open');\r\n        };\r\n\r\n        var hide = $dropdown.hide;\r\n        $dropdown.hide = function (returnFocus) {\r\n          if (!$dropdown.$isShown) return;\r\n\r\n          element.attr('aria-expanded', 'true');\r\n          $dropdown.$element.attr('aria-hidden', 'true');\r\n\r\n          if (options.keyboard && $dropdown.$element) {\r\n            $dropdown.$element.off('keydown', $dropdown.$onKeyDown);\r\n            $dropdown.$element.off('focusout', $dropdown.$onFocusOut);\r\n          }\r\n\r\n          bodyEl.off('click', onBodyClick);\r\n          if (parentEl.hasClass('dropdown')) parentEl.removeClass('open');\r\n          hide();\r\n          if (returnFocus) {\r\n            $timeout(function () {\r\n              if (element && element[0]) {\r\n                element[0].focus();\r\n              }\r\n            }, 0, false);\r\n          }\r\n        };\r\n\r\n        var destroy = $dropdown.destroy;\r\n        $dropdown.destroy = function () {\r\n          bodyEl.off('click', onBodyClick);\r\n          destroy();\r\n        };\r\n\r\n        // Private functions\r\n\r\n        function onBodyClick (evt) {\r\n          if (evt.target === element[0]) return;\r\n          return evt.target !== element[0] && $dropdown.hide();\r\n        }\r\n\r\n        return $dropdown;\r\n\r\n      }\r\n\r\n      return DropdownFactory;\r\n\r\n    };\r\n\r\n  })\r\n\r\n  .directive('bsDropdown', function ($window, $sce, $dropdown) {\r\n\r\n    return {\r\n      restrict: 'EAC',\r\n      scope: true,\r\n      compile: function (tElement, tAttrs) {\r\n\r\n        // Support for inlined template (next sibling)\r\n        // It must be fetched before compilation\r\n        if (!tAttrs.bsDropdown) {\r\n          var nextSibling = tElement[0].nextSibling;\r\n          while (nextSibling && nextSibling.nodeType !== 1) {\r\n            nextSibling = nextSibling.nextSibling;\r\n          }\r\n          if (nextSibling && nextSibling.className.split(' ').indexOf('dropdown-menu') >= 0) {\r\n            tAttrs.template = nextSibling.outerHTML;\r\n            tAttrs.templateUrl = undefined;\r\n            nextSibling.parentNode.removeChild(nextSibling);\r\n          }\r\n        }\r\n\r\n        return function postLink (scope, element, attr) {\r\n\r\n          // Directive options\r\n          var options = {\r\n            scope: scope\r\n          };\r\n          angular.forEach(['template', 'templateUrl', 'controller', 'controllerAs', 'placement', 'container', 'delay', 'trigger', 'keyboard', 'html', 'animation', 'id', 'autoClose'], function (key) {\r\n            if (angular.isDefined(tAttrs[key])) options[key] = tAttrs[key];\r\n          });\r\n\r\n          // use string regex match boolean attr falsy values, leave truthy values be\r\n          var falseValueRegExp = /^(false|0|)$/i;\r\n          angular.forEach(['html', 'container'], function (key) {\r\n            if (angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key])) options[key] = false;\r\n          });\r\n\r\n          // bind functions from the attrs to the show and hide events\r\n          angular.forEach(['onBeforeShow', 'onShow', 'onBeforeHide', 'onHide'], function (key) {\r\n            var bsKey = 'bs' + key.charAt(0).toUpperCase() + key.slice(1);\r\n            if (angular.isDefined(attr[bsKey])) {\r\n              options[key] = scope.$eval(attr[bsKey]);\r\n            }\r\n          });\r\n\r\n          // Support scope as an object\r\n          if (attr.bsDropdown) {\r\n            scope.$watch(attr.bsDropdown, function (newValue, oldValue) {\r\n              scope.content = newValue;\r\n            }, true);\r\n          }\r\n\r\n          // Initialize dropdown\r\n          var dropdown = $dropdown(element, options);\r\n\r\n          // Visibility binding support\r\n          if (attr.bsShow) {\r\n            scope.$watch(attr.bsShow, function (newValue, oldValue) {\r\n              if (!dropdown || !angular.isDefined(newValue)) return;\r\n              if (angular.isString(newValue)) newValue = !!newValue.match(/true|,?(dropdown),?/i);\r\n              if (newValue === true) {\r\n                dropdown.show();\r\n              } else {\r\n                dropdown.hide();\r\n              }\r\n            });\r\n          }\r\n\r\n          // Garbage collection\r\n          scope.$on('$destroy', function () {\r\n            if (dropdown) dropdown.destroy();\r\n            options = null;\r\n            dropdown = null;\r\n          });\r\n\r\n        };\r\n      }\r\n    };\r\n\r\n  });\r\n"],"sourceRoot":"/source/"}